//##############################################################
// Job options file
//==============================================================
#include "Common.opts"

//--------------------------------------------------------------
// Private Application Configuration options
//--------------------------------------------------------------
ApplicationMgr.TopAlg  = { "ParentAlg" };

// Set output level threshold (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL )
MessageSvc.OutputLevel  = 3;

//--------------------------------------------------------------
// Event related parameters
//--------------------------------------------------------------
ApplicationMgr.EvtMax    = 10;   // events to be processed (default is 10)
ApplicationMgr.EvtSel   = "NONE"; // do not use any event input


//-----------------------------------------------------------------
// Testing scheduling stops in Event loop processing
//-----------------------------------------------------------------
ApplicationMgr.TopAlg  += { "StopperAlg" };
StopperAlg.StopCount = 20;

//--------------------------------------------------------------
// Testing Sequencers
//--------------------------------------------------------------
ApplicationMgr.TopAlg  += { "Gaudi::Sequencer/TopSequence" };
TopSequence.Members = {"Gaudi::Sequencer/Sequence1", "Gaudi::Sequencer/Sequence2"};
TopSequence.ShortCircuit = false;
Sequence1.Members = {"Prescaler/Prescaler1", "HelloWorld", "EventCounter/Counter1"};
Sequence2.Members = {"Prescaler/Prescaler2", "HelloWorld", "EventCounter/Counter2"};

HelloWorld.OutputLevel = 2;
Prescaler1.PercentPass = 50.;
Prescaler2.PercentPass = 10.;
Prescaler1.OutputLevel = 4;
Prescaler2.OutputLevel = 4;

//-----------------------------------------------------------------
// Testing the new GaudiSequencer
//-----------------------------------------------------------------
ApplicationMgr.TopAlg  += { "GaudiSequencer/ANDSequence" , "GaudiSequencer/ORSequence" };
ANDSequence.Members = { "HelloWorld/AND", "EventCounter/ANDCounter"};
ORSequence.Members = { "HelloWorld/OR", "EventCounter/ORCounter"};
ORSequence.ModeOR = 1;
ORSequence.MeasureTime = 1;
ANDSequence.MeasureTime = 1;


ApplicationMgr.ExtSvc = { "ToolSvc", "AuditorSvc"} ;
ApplicationMgr.AuditAlgorithms = True ;
AuditorSvc.Auditors += {"TimingAuditor/TIMER"} ;
