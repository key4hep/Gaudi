 =============================================================================
! package DetDesc
! package manager : Marco Clemencic, Juan Palacios
! ============================================================================

! 2011-11-23 - Marco Clemencic
 - Fixed gcc 4.6 warning: operation on ‘...’ may be undefined
   [-Wsequence-point]

!========================= DetDesc v18r27p1 2011-08-30 =======================
! 2011-08-03 - Marco Cattaneo
 - Remove files DetDesc/*.icpp, moving code directly into corresponding .h,
   since they were not used anywhere else and makes it consistent with standard
   LHCb style. Fixes circular include dependencies, coverity issues 15520,
   15526, 15527, 15528, 15529, 15530, 15531, 15532

!========================= DetDesc v18r27 2011-07-25 =========================
! 2011-06-22 - Marco Cattaneo
 - Protect unprotected debug and verbose printout

!========================= DetDesc v18r26 2011-06-14 =========================
! 2011-05-06 - Chris Jones
 - Add SmartRef<Condition> and SmartRef<AlignmentCondition> to python dictionary

!========================= DetDesc v18r25 2011-04-26 =========================
! 2011-04-08 - Marco Cattaneo
 - Add some checks on rotation matrices to recover precision when elements
   should be zero.

!========================= DetDesc v18r24 2011-04-04 =========================
! 2011-03-14 - Wouter Hulsbergen
 - Fix problem in 3DTransformationFunctions that is due to a bug in
 compilor optimization in SLC5. The bug was already fixed in a similar
 piece of code in the alignment project, but hadn't realized that it
 was used in more than one place. (Will soon remove code duplication by
 fixing TAlignment/src/AlParameters.)

!========================= DetDesc v18r23 2011-02-22 =========================
! 2011-02-15 - Chris Jones
 - Add to Material and Mixture classes a new reset() method, that resets the
   objects back to their default constructor states. Starting point to  
   develop functionality in RichDet to update the radiator gas mixtures on
   the fly. Developmental, so may evolve. Does NOT affect any existing 
   functionality.

! 2011-02-08 - Marco Cattaneo
 - Fix UNINIT_CTOR in ConditionInfo.cpp (coverity defect 16159)
 - Fix UNINIT_CTOR in Element.cpp (coverity defect 16160)
 - Fix UNINIT_CTOR in Isotope.cpp (coverity defect 16161)
 - Fix UNINIT_CTORs in LAssembly.cpp (coverity defects 16162,16163)
 - Fix UNINIT_CTOR in MagneticFieldGrid.cpp (coverity defect 16165)
 - Fix UNINIT_CTOR in Mixture.cpp (coverity defect 16166)
 - Fix UNINIT_CTOR in SolidSphere.cpp (coverity defect 16167)
 - Fix UNINIT_CTOR in SolidTrap.cpp (coverity defect 16168)

!========================= DetDesc v18r22 2011-01-31 =========================
! 2011-01-07 - Marco Cattaneo
 - Fix icc warnings and remarks

!====================== DetDesc v18r21 2010-07-19 =============================
! 2010-07-13 - Marco Cattaneo
 - Fix bug #69364: Wrong fractional mass calculation on composite material
   in DetDesc

!====================== DetDesc v18r20 2010-04-09 =============================
! 2010-04-08 - Wouter Hulsbergen 
- increased max capcity of ISolid::Ticks
- throw exceptions from complicated Solids if capacity insufficient

!====================== DetDesc v18r19 2010-01-20 =============================
! 2010-01-11 - Wouter Hulsbergen 
- Added method to set pivot point to AlignmentCondition

! 2010-01-08 - Wouter Hulsbergen 
- Fix bug in 3DTransformationFunctions: getZYXTransformParameters was
  not correctly dealing with the pivot point. (It was essentially ignoring it.) 
  This affects the TT alignment.

!====================== DetDesc v18r18 2009-12-11 =============================
! 2009-12-10 - Marco Cattaneo for Brett Viren
 - Fix bug #60276: SolidPolycone does not define a correct bounding box

! 2009-12-06 - Dmitry GOLUBKOV
 - fix link error on windows by introducing interface functions in
  DetDesc/HistoParam.h, DetDesc/src/Lib/HistoParam.cpp

! 2009-12-05 - Dmitry Golubkov
 - DetDesc/HistoParam.h: introduce namespace DetDesc::Params
 - DetDesc/src/Lib/HistoParam.cpp: change printout from histogram conditions
     to histogram parameters
 - add interface functions DetDesc::Params::paramAsHisto1D and paramAsHisto2D
	   to extract 1d and 2d histogram parameters from a Condition, new files:
	DetDesc/ParamAsHisto.h
	src/Lib/ParamAsHisto.cpp
 - dict/DetDescDict.h: add include DetDesc/ParamAsHisto.h
 - dict/DetDescDict.xml: add names of the interface functions
 - cmt/requirements: version increment to v18r18

!====================== DetDesc v18r17 2009-11-27 =============================
! 2009-11-15 - Vanya Belyaev
 - DetDesc/Compare.h
    substitute gsl_cmp ( "Knuth's-compare") by "Lomont-compare
    remove dependency on GLS 

 - cmt/requirements
    remove GSL-related lines   
    version increment to v18r17 

!====================== DetDesc v18r16 2009-11-13 =============================
! 2009-11-13 - Wouter Hulsbergen
 - Added function to compute derivative jacobian from Transform to 3DTransformationFunctions

! 2009-10-24 - Marco Clemencic
 - Fixed a typo in src/Lib/HistoCondition.cpp

! 2009-10-23 - Vanya Belyaev

 - add "histograms conditions": conditions which are able to hold the histograms:

     DetDesc::Histo1DCond 
     DetDesc::Histo2DCond 

   new files: 

     DetDesc/HistoCondition.h
     DetDesc/HistoParam.h
     src/Lib/CLID_HistoCondition.cpp
     src/Lib/HistoCondition.cpp
     src/Lib/HistoParam.cpp

 - cmt/requirements 

     version increment to v8r16 

!====================== DetDesc v18r15 2009-09-02 =============================
! 2009-09-02 - Marco Cattaneo
 - In requirements, remove support for slc3 and for Root < 5.19

! 2009-09-01 - Wouter Hulsbergen
 - Added MagneticFieldGrid class

!====================== DetDesc v18r14 2009-06-16 =============================
! 2009-06-15 - Vanya Belyaev
 - add missing classes into the dictionary:
        ILVolume::PVolumes
        ILVolume::PVolumePath, etc...
 - cmt/requirements 
    version increment to v19r14 

!====================== DetDesc v18r13p1 2009-05-28 ===========================
! 2009-05-28 - Marco Cattaneo
 - Add a missing include for Windows compilation

!====================== DetDesc v18r13 2009-05-06 =============================
! 2009-04-17 - Marco Cattaneo
 - Replaced all endreq by endmsg, obsolescent in Gaudi v21
 - Fixed many doxygen warnings

! 2009-03-17 - Wouter Hulsbergen
 - Added another virtual function hook to AlignmentCondition to allow
   special condition update for VeloAlignCondition

!====================== DetDesc v18r12 2009-02-18 =============================
! 2009-02-04 - Marco Clemencic
 - Extended the RunChangeIncident to contain the run number too (avoid
   dependency on ODIN).
 - Fixed usage of GSL (-no_auto_imports).

! 2009-02-03 - Marco Clemencic
 - Added the header DetDesc/RunChangeIncident.h (was in Event/DAQEvent).

! 2009-02-02 - Marco Clemencic
 - Fixed some return type qualifiers that were causing problems in the
   dictionaries with the head version of ROOT.

! 2009-01-23 - Marco Cattaneo
 - Backwards compatible fixes for Gaudi v21

!====================== DetDesc v18r11 2009-01-12 =============================
! 2009-01-10 - Marco Clemencic
 - Removed the implementation of GeometryInfoPlus::getAlignmentCondition. It was
   not needed and was causing problems with the VeloAlignCond.
   The function is still there to preserve the interface, but the body is empty.

! 2008-12-11 - Marco Cattaneo
 - Fix a gcc 4.3 compilation warning

!====================== DetDesc v18r10 2008-11-17 =============================
! 2008-11-04 - Marco Cattaneo
 - Fix a missing dictionary instantiation

! 2008-10-28 - Marco Cattaneo
 - Fix gcc 4.3 compilation warnings and errors

! 2008-10-27 - Marco Cattaneo
 - Clean up includes in DetectorElement.h

! 2008-10-24 - Marco Cattaneo
 - Add link to libGenVector when using ROOT_GE_5_19

!====================== DetDesc v18r9 2008-09-30 ==============================
! 2008-09-24 - Marco Cattaneo
 - Cleaned the logic in IDetectorElement::condition.

! 2008-09-23 - Marco Clemencic
 - Extended IDetectorElement with the function hasCondition(name) to check if
   the conditionref with the specified name is defined in the XML.
 - Modified the behavior of IDetectorElement::condition() to throw an exception
   if the requested condition is not known.

!====================== DetDesc v18r8 2008-07-27 ==============================
! 2008-07-21 - Marco Cattaneo
 - Add DetDesc/IDetElemFinder.h, previously in LHCbKernel
 - Remove from DetDescDict.h the hack for an obsolete gccxml problem on Win32

!====================== DetDesc v18r7 2008-07-16 ==============================
! 2008-07-14 - Stephanie Hansmann-Menzemer
 - Minor fix to the computation of the molar weight for computation of dE/dx
   constants for mixtures - almost no effect on fitted tracks

! 2008-07-11 - Marco Clemencic
 - Minor changes to AlignmentConditions to be able to subclass it (needed by the
   specialized VeloAlignCond).
 - Removed CLID for ParamValidDataObject (not used and unusable).

! 2008-07-11 - Marco Cattaneo
 - In requirements, remove dependency on LHCbKernel, not needed

!====================== DetDesc v18r6 2008-06-30 ==============================
! 2008-06-24 - Chris Jones
 - Fix division by zero errors in Solidbase.h 
 - Remove some multiple return statements in SolidBase.h (prevents inlining).

!====================== DetDesc v18r5 2008-06-04 ==============================
! 2008-06-04 M Needham
 - Clean up some == comparisions with doubles

! 2008-05-20 - Marco Cattaneo
 - Fix doxygen warnings
 - Fix compilation warning in latest changes

! 2008-05-20 - Stephanie Hansmann-Menzemer
 - Add computation of mean excitation energy and density effect correction 
   parameters to elements and materials

!====================== DetDesc v18r4p1 2008-03-28 ============================
! 2008-03-28 - Marco Gersabeck
 - Bug fix in GlobalToLocalDelta.cpp
  + localDeltaFromAnyFrameDelta(...IDetectorElement...) was calling
    localDeltaFromAnyFrame(...IGeometryInfo...) instead of
    localDeltaFromAnyFrameDelta(...IGeometryInfo...)
  + remove unused line in localDeltaFromAnyFrameDelta(...IGeometryInfo...)
   
! 2008-03-19 - Juan Palacios
 - cmt/requirements
  . Increase version to v18r4p1

! 2008-03-19 - Jan Amoraal
 - Bug fix in AlignmentCondition.cpp
  + m_matrixInv was set to m_matrix in the method offNominalMatrix which 
    meant that both were actually set to newMatrix.Inverse(), while 
    m_matrixInv should be set to newMatrix.
   
!====================== DetDesc v18r4 2008-02-22 ==============================
! 2008-02-22 - Marco Clemencic
 - Clean up, fixes and improvements to Condition::toXml.
   + Fixed the problem with the formatting of vectors
   + Allow to specify the precision of the doubles
   + Added support for std:map (only those supported in the converter)
   + Disabled (by default) the HTML header and trailer (can be enabled with a flag)
 - Improved Python bindings for Condition. 

!====================== DetDesc v18r3 2008-01-22 ==============================
! 2008-01-15 - Juan PALACIOS
 - src/Lib/3DTransformationFunctions.cpp
  . Tidy up a bit taking advantage of latest syntax fixes in MathCore.

! 2008-01-14 - Juan Palacios
 - DetDesc/GlobalToLocalDelta.h
  . Add methods to estimate "off-nominal" delta matrix at local level, starting
    from either total position or "off-nominal" corrections in an arbitrary 
    frame, independent of the detector element hierarchy.

  const Gaudi::Transform3D localDeltaFromAnyFrame(const Gaudi::Transform3D& frame,
                                                  const IDetectorElement* DE,
                                                  const Gaudi::Transform3D& toGlobalInFrame); 

  const Gaudi::Transform3D localDeltaFromAnyFrame(const Gaudi::Transform3D& frame,
                                                  const IGeometryInfo* GI,
                                                  const Gaudi::Transform3D& toGlobalInFrame); 

  const Gaudi::Transform3D localDeltaFromAnyFrameDelta(const Gaudi::Transform3D& frame,
                                                       const IDetectorElement* DE,
                                                       const Gaudi::Transform3D& deltaInFrame); 

  const Gaudi::Transform3D localDeltaFromAnyFrameDelta(const Gaudi::Transform3D& frame,
                                                       const IGeometryInfo* GI,
                                                       const Gaudi::Transform3D& deltaInFrame); 

! 2008-01-14 - Juan Palacios
 - DetDesc/3DTransformationFunctions.h
  . Add method
    template <class ROT>
    void getZYXRotationParameters( const ROT& rotation,
                                   double& rotX, 
                                   double& rotY, 
                                   double& rotZ           ) 

  Takes any MathCore 3D rotation and estimates the equivalent
  Euler 321 rotation parameters.

! 2008-01-11 - Marco Cattaneo
 - Do not add MathCore to ROOT_linkopts, already done by LHCbKernel

! 2008-01-11 - Juan PALACIOS
 - DetDesc/3DTransformationFunctions.h
  . Remove methods

    const Gaudi::Transform3D XYZTranslation(const std::vector<double>& params);
    Method is replaced by direct use of new ROOT::Math::Translation3D class.

    const Gaudi::Transform3D ZYXRotation(const std::vector<double>& params);  
    Method replaced by direct ure of new ROOT::Math::RotationZYX class.

    void getZYXRotationParameters(const Gaudi::Rotation3D& rot,
                                  std::vector<double>& rotParams);
    void getTranslationParameters(const Gaudi::TranslationXYZ& trans,
                                  std::vector<double>& transParams);
    Get components directly from RotationZYX and Tranlsation3D objects.

 - Remove from src/Lib:
   RotationZYX.h
   RotationZYXfwd.h
   RotationZYX.cpp
   3DConversions.h
   3DConversions.cpp
   These had been borrowed from MathCore awaiting their release.

! 2008-01-10 - Juan PALACIOS
 - DetDesc/GlobalToLocalDelta.h, src/Lib/GlobalToLocalDelta.cpp
  . Add new functions:

   Obtain a global off-nominal correction D_global on top of the current total 
   transformation of a IGeometryInfo or IDetectorElement (T_global) starting from 
   a correction D' calculated at the local level of that IGeometryInfo or IDetectorElement

  const Gaudi::Transform3D globalDeltaFromLocalDeltaPrime(const IDetectorElement*   DE,
                                                          const Gaudi::Transform3D& deltaPrime);
  const Gaudi::Transform3D globalDeltaFromLocalDeltaPrime(const IGeometryInfo*      GI,
                                                          const Gaudi::Transform3D& deltaPrime);

   Obtain the global "delta" transformation corresponding to the local "delta"
   of an IDetectorElement or IGeometryInfo

  const Gaudi::Transform3D globalDelta(const IDetectorElement* DE);
  const Gaudi::Transform3D globalDelta(const IGeometryInfo* GI);

   Obtain the 3D transformation, T_relative, representing the placement of 
   DetectorElement DE in the frame of DetectorElement referenceDE.

  const Gaudi::Transform3D relativeTransformation(const IDetectorElement* referenceDE,
                                                  const IDetectorElement* DE);

! 2007-12-19 - Vanya BELYAEV
 New treatment of geometry overlaps:

 New files: 
  - DetDesc/Compare.h
      comparison of floating numbers 
  - DetDesc/IGeometryErrorSvc.h, src/Lib/IGeometryErrorSvc.cpp
        abstract interface for hadnling of geomety errors 
  - DetDesc/IntersectionErrors.h, src/Lib/IntersectionErrors.cpp
       helper utility to make a bridge between volumes and 
       geometry error handling service 

 Modified files: 
  - DetDesc/VolumeIntersectionIntervals.h
      add new functions:
       1) MergeOwnAndChildIntersections2
       2) correct 
       3) intersect
       4) ... 

  - src/Lib/LAssembly.cpp, src/Lib/LVolume.cpp, src/Lib/LogVolBase.cpp
      make use of new functions 

  - cmt/requirements 
      version increment to v18r3 

!====================== DetDesc v18r2 2007-12-04 ==============================
! 2007-12-04 - Juan Palacios
 - Removal of 
   ROOT::Math::Transform3D(ROOT::Math::XYZVector, 
                           ROOT::Math::Rotation3D) 
   constructor, for 3D transformation made from translation followed by 
   rotation. Modify code to produce the equivalent transformation thus:
   ROOT::Math::VectorXYZ translation = ...;
   ROOT::Math::Rotation3D rotation = ...'
   ROOT::Math::Transform3D myTransform(rotation, rotation(translation));

   files modified:
   - src/Lib/PVolume.cpp
   - src/Lib/SolidChild.cpp

 ### requires GaudiKernel >= v23r2 ###
! 2007-11-09 - Marco Clemencic
 - Added specialized fillStream() member function for ValidDataObject and
   ParamValidDataObject.
 - Use GaudiKernel/SerializeSTL.h to print parameters of ParamValidDataObject. 

!====================== DetDesc v18r1p1 2007-10-25 ============================
! 2007-10-25 - Marco Cattaneo
 - Fix gcc 4.2 compilation problem (https://savannah.cern.ch/bugs/?30713)
 - Fix docygen warnings

!====================== DetDesc v18r1 2007-10-02 ==============================
! 2007-10-02 - Marco Cattaneo
 - Use new GaudiKernel/cbrt.h implementation in Element.cpp, and remove
   LHCbMath dependency from requirements

! 2007-10-01 - Marco Clemencic
 - Change in DetDesc::Services to allow the creation of the UpdateManagerSvc if
   not already present.
 - Change in GeometryInfoPlus: use DetDesc::Services also for the
   UpdateManagerSvc.

!====================== DetDesc v18r0 2007-09-21 ==============================
! 2007-09-21 - Marco Cattaneo
 - Do not unregister from UMS in GeometryInfoPlus destructor, as this causes
   crash in Brunel. To be understood

! 2007-09-20 - Chris Jones
 - Make log() in GeometryInfoPlus.h return MsgStream by reference not value

! 2007-09-20 - Wouter Hulsbergen
 - changed tick container to a fixed capacity array
 - optimizations in calculations of intersections in cone and polycone
 - changed logic in LVolume::intersectLine and LVolume::intersectBody such that
   volumes only once intersected if they are their own cover colume

! 2007-09-18 - Juan PALACIOS
 - DetDesc/IGeometryInfo.h
   . Improve some doxygen comments
 - DetDesc/GeometryInfoPlus.h
   . Remove "duplicated" doxygen comments. These should be picked up from 
     abstract base class IGeometryInfo.
   . Remove "inline" virtual methods and move to implementation file.
 - DetDesc/AlignmentCondition.h
   . Improve some doxygen comments
 - src/Lib/GeometryInfoPlus.cpp
   . Import some implementations which were "inlined" in the corresponding .h file

! 2007-09-14 - Wouter Hulsbergen
  - modifications to SolidBox and SolidTubs to speed things up

! 2007-09-12 - Juan Palacios
  - cmt/requirements
    . Increase version to 18r0
  - DetDesc/IGeometryInfo.h, AlignmentCondition.h
    . Change names of methods returning 3D transformations for more explicit 
      and hopefully clearer ones.
    . Increase IGeometryInfo interface major version to 3.
  - DetDesc/GeometryInfoPlus.h
  - src/Lib/GeometryInfoPlus.cpp, AlignmentCondition.cpp, GlobalToLocalDelta.cpp
    . Adapt to changes in interfaces above.

! 2007-09-07 - Marco Cattaneo
 - Remove duplicate dictionaries already in libSTLRflx.so and libMathRflx.so

! 2007-09-04 - Marco Cattaneo for Brett Viren
 - Fix gcc 4.0.3 compilation (Savannah patch 28908)

! 2007-08-01 - Marco Clemencic
 - Made GeometryInfoPlus objects unregister from the UpdateManagerSvc on deletion
   and added the missing release of UMS.

! 2007-07-17 - Juan Palacios
 - DetDesc/GlobalToLocalDelta.h
   . Clarify signature and doxygen documentation localDeltaFromGlobalTransform
     methods.

!====================== DetDesc v17r5 2007-07-11 ==============================
! 2007-07-11 - Juan PALACIOS
 - DetDesc/GlobalToLocalDelta.h, src/Lib/GlobalToLocalDelta.cpp
   . Add methods

     const Gaudi::Transform3D localDeltaFromGlobalTransform(const IDetectorElement* DE,
                                                            const Gaudi::Transform3D& globalTransform)
     const Gaudi::Transform3D localDeltaFromGlobalTransform(const IGeometryInfo* GI,
                                                            const Gaudi::Transform3D& globalTransform)

     to get the local delta matrix starting from a global position matrix.

   . Add methods

  const Gaudi::Transform3D localDeltaFromGlobalTransform(const IGeometryInfo* GI,
                                                         const Gaudi::Transform3D& globalTransform); 
  const Gaudi::Transform3D localDeltaFromParentTransform(const IGeometryInfo* ParentGI,
                                                         const IGeometryInfo* GI,
                                                         const Gaudi::Transform3D& globalTransform);

     to get the local delta matrix starting from a position matrix giving the position of
     an element with respect to one of its ancestors.

! 2007-07-09 - Marco Cattaneo
 - Add dependency on LHCbMath to access cbrt from LHCbMath/Power.h

! 2007-07-02 - Marco Cattaneo
 - Fix some doxygen warnings

! 2007-06-29 M Needham
  - Use cbrt in Gaudi::Math rather than pow 

! 2007-06-25 - Juan PALACIOS

  - src/Lib/AlignmentCondition.cpp
    . Tidy up makeMatrices method by using functions from 
      DetDesc/3DTransformationFunctions.h

  - src/Lib/GeometryInfoPlus.cpp
    . Fix bug: local copy of the misalignment matrix was holding the inverse
      of what the code thought it was holding.

  - src/Lib/GlobalToLocalDelta.cpp
    . Fix localDeltaMatrix function algebra again. Previous was still wrong!

  - src/Lib/GeometryInfoPlus.cpp
    . Revert to previous revision. Changes of 2007-06-22 were actually 
      incorrect.

! 2007-06-22 - Juan PALACIOS
  - src/Lib/GlobalToLocalDelta.cpp
    . Fix implementation of localDeltaMatrix function. Algebra was basically wrong!
  - src/Lib/GeometryInfoPlus.cpp
    . Fix calculateFullMatrices: Order of matrix multiplications was wrong.
      Was: d_0*N_0*d_1*N_1*d_2*N_2*...*d_N*N_N
      Is:  N_0*d_0*N_1*d_1*N_2*d_2*...*N_N*d_N
      where d_i and N_i are the misalign->align and global->parent matrices 
      at level i.

!====================== DetDesc v17r4 2007-06-14 ==============================
! 2007-06-14 - Marco Clemencic
  - Added dictionaries for free functions in DetDesc namespace.

! 2007-06-13 - Juan PALACIOS

  - DetDesc/3DTransformationFunctions.h, src/Lib/3DTransformationFunctions.cpp
    . Moved more general functions, ie those not depending on DetDesc classes, 
      from GlobalToDelta.h, .cpp to this new file. Funcitons are still in the DetDesc
      namespace.

  - DetDesc/GlobalToLocalDelta.h, src/Lib/GlobalToLocalDelta.h
    . Move more general functions to 3DTransformationFunctions, namespace still DetDesc.

  - DetDesc/AlignmentCondition.h
    . Replace include of DetDesc/GlobalToLocalDelta.h by DetDesc/3DTransformationFunctions.h

  - DetDesc/AlignmentCondition.h, src/Lib/AlignmentCondition.cpp
    . Replace private Transform3D manipulations by functions in GlobalToLocalDelta.h, DetDesc
      namespace.

  - src/Lib/AlignmentCondition.cpp
    . Do all matrix calculations in terms on the ideal -> misaligned matrix, corresponding
      to field m_matrixInv.

! 2007-06-07 - Juan PALACIOS
  - DetDesc/GlobalToLocalDelta.h, src/Lib/GlobalToLocalDelta.h
    . Add localDeltaParameters functions to go from deltas in global frame to
      ones in local frame.

! 2007-06-06 - Juan PALACIOS
  - DetDesc/GlobalToLocalDelta.h, src/Lib/GlobalToLocalDelta.h
    . Add some more 3D transformation manipulation functions.
      GlobalToLocalDelta starts to become a misnomer.

! 2007-06-01 - Juan PALACIOS
  - src/Lib/GlobalToLocalDelta.h
    . Fix bug in localToGlobalTransformation function.

! 2007-06-01 - Juan PALACIOS
  - src/Lib/AlignmentCondition.cpp
    . Fix small but in transformation matrix setter method.
  - DetDesc/GlobalToLocalDelta.h, src/Lib/GlobalToLocalDelta.cpp
    . Add functions to make Gaudi::Transform3D out of 3 parameters representing either a 
      cartesian translation or three rotation angles about the cartesian axes.
    . Add a function to construct a local to global Gaudi::Transform3D out of nine parameters
      describing a pivot, a translation and a rotation about three cartesian axes.
    . All these functions are independent of DetDesc and should be put elsewhere, but for the time 
      being they rely on src/Lib/3DConversions.h, which will disappear when a version of
      MathCore with a fully integrated ROOT::Math::RotationXYZ is released.

! 2007-05-31 - Juan PALACIOS
  - DetDesc/AlignmentCondition.h, src/Lib/AlignmentCondition.cpp
    . Fix bug in matrix(const Gaudi::Transform3D&) method. This method takes 
      the matrix which moves the detector element from nominal to misalinged 
      position. Internally, this is m_matrixInv. Since we do most operations 
      with the misaligned -> nominal matrix, m_matrix is, confusingly,
      actually the inverse of the misalign matrix.
    . Move matrix(const Gaudi::Transform3D&) and StatusCode setTransformation( const std::vector<double>&, const std::vector<double>&, const std::vector<double>&); to .cpp file.
  - Add DetDesc/GlobalToLocalDelta.h, src/Lib/GlobalToLocalDelta.cpp
    . Simple standalone functions to convert a misalignment calculated in the
      global frame to the corresponding misalignment in the frame of the parent
      of the detector element in question. 

! 2007-05-30 - Juan PALACIOS
  - added temporary files in src/Lib:
    . RotationZYX{.h, .cpp}   : Hacked from homonimous MathCore file in ROOT cvs.
      Describes a 3D rotation transformation about the Z, Y' and X" axes, 
      which is what we use in LHCb.
    . 3DConversions{.h, .cpp} : Hacked from homonymous MathCore file in ROOT 
      cvs head. Provides conversions between RotationZYX and other MathCore 3D
      rotation representations.

  - DetDesc/AlignmentCondition.h, src/Lib/AlignmentCondition.cpp
    . Use RotationZYX class internally. At the moment this is messy, as it is
      still not integrated with MathCore. So code will need to be cleaned up when
      RotationZYX classes and co are released in MathCore.
    . Provide functionality to get back and update the set of Z-Y-X Euler angles
      obtained each time the transformation matrix is modified.

!====================== DetDesc v17r3 2007-05-03 ==============================
! 2007-05-03 - Marco Cattaneo
 - Added generation of dictionaries for public classes, previously in DetSys
 - Fix some doxygen warnings
 - Simplify ROOT_linkopts

! 2007-05-05 - Juan PALACIOS
  - DetDesc/IGeometryInfo.h
    . Add virtual const Gaudi::Transform3D IGeometryInfo::localMatrix() const. 
      Returns full transformation (incl. misalignment) relating it's frame to 
      that is it's detector element parent.
  - DetDesc/GeometryInfoPlus.h
    . inline implementasion of const Gaudi::Transform3D IGeometryInfo::localMatrix() const.

!====================== DetDesc v17r2 2007-03-16 ============================
! 2007-03-16 - Marco Cattaneo
 - setBP now returns void instead of StatusCode, as it was never checked (and
   could not be!)
 - Fixed doxygen warnings

!====================== DetDesc v17r1 2007-02-23 ============================
! 2007-02-23 - Marco Cattaneo
 - Remove all factories, obsolete remnant of an old DetDesc implementation

! 2007-02-02 - Marco CLEMENCIC
 - Fixed a minor bug in a debug function of ParamValidDataObject.

!====================== DetDesc v17r0 2007-01-31 ============================
! 2007-01-31 - Marco Cattaneo
 - Fix link options for Windows and retag requirements
 
! 2007-01-16 - Marco Cattaneo
 - Remove LHCbDefinitions dependency

! 2007-01-09 - Marco Cattaneo
 - Fix some unchecked StatusCodes

! 2006-12-06 - Florence RANJARD
 - apply_pattern install_more_includes
 - fix for new Plugins (P.Mato)

!====================== DetDesc v16r8 2006-11-03 ==============================
! 2006-10-23 - Marco Clemencic
 - Fixed a problem with copy constructor of Condition, ParamValidDataObject and
   ValidDataObject.
 - Add a function to ParamList and ParamValidDataObject to insert a parameter
   as pointer to BasicParameter (used by the UpdateManagerSvc).

!====================== DetDesc v16r8 2006-10-18 ==============================
! 2006-10-17 - Matt Needham
 - Changes in: SolidBox::IntersectTicks method speeded up
               LAssembly ++not++, remove/protect MsgStream calls
               DetectorElement: reduce number of virtual function calls   
 
! 2006-10-11 - Marco Cattaneo
 - Use SystemOfUnits.h from GaudiKernel

! 2006-10-10 - Juan PALACIOS
  - DetDesc/IGeometryInfo.h
    . Add method 
      virtual const ILVolume::ReplicaPath& IGeometryInfo::supportPath()

  - DetDesc/GeometryInfoPlus.h, src/Lib/GeometryInfoPlus.cpp
    . supportPath() now returns const ILVolume::ReplicaPath&

! 2006-10-04 - Marco Clemencic
 - Fix a minor bug in Condition. The method update should take a
   ValidDataObject and not a Condition object. It does not harm because it is
   not used, but it can confund other developers.

!====================== DetDesc v16r7 2006-09-28 ==============================
! 2006-09-25 - Juan PALACIOS
  - DetDesc/IGeometryInfo.h
    . Add method idealMatrixInv(), returning the inverse of the ideal matrix 
      linking the GeometryInfo to the global frame.

! 2006-08-08 - Juan PALACIOS
  - Added DetDesc/SU2LHCb.h
    . In-line methods for transformations from LHCb cavern surveying frame of
      reference to LHCb frame and back. Accounts for X <-> Y axis shift and 
      tilt wrt. beam. 

!====================== DetDesc v16r6 2006-06-16 ==============================
! 2006-06-16 - Marco Cattaneo
 - More fixes for Gaudi::Units

! 2006-06-15 - Vanya BELYAEV
 - move DetectorElement::Assert functions from private to protected interface
   to eliminate code duplication in Calorimeter software  
 - improve the printout of exceptions 

!====================== DetDesc v16r5p1 2006-06-01 =========================
! 2006-06-01 - Marco Cattaneo
 - Backward compatible fixes for gcc345 compilation errors and warnings 

!====================== DetDesc v16r5 2006-05-17 =========================
! 2006-05-17 - Marco Cattaneo
 - Migrate to Gaudi::Units

! 2006-05-10 - Marco Cattaneo
 - Remove unused IInspectable interface from ISolid and IGeometryInfo

!====================== DetDesc v16r4 2006-04-20 =========================
! 2006-04-20 - Florence RANJARD
 - move all *.h from src/Lib to DetDesc/. to use the InstallArea/include
   when building DetDict in DetSys
 - update *.cpp accordingly

!======================== DetDesc v16r3 2006-03-08 ========================
! 2006-03-08 Juan Palacios
 - Fix some memory leaks in AlignmentCondition private methods.

! 2006-02-08 M Needham
 - Adapt Isotope to same way of getting nucleons as elements and mixtures

! 2006-02-01 - Marco Clemencic
 - Updated to Gaudi v18r2 (use Gaudi::Time instead of ITime+TimePoint)

!======================== DetDesc v16r2 2006-01-20 ========================
! 2006-01-19 - Marco Clemencic
 - Improved ParamValidDataObject exceptions. Now is is possible to understand
   which is the problem.

! 2006-01-12 - Marco Clemencic
 ### requires GaudiKernel >= v20r2 ###
 - IUpdateManagerSvc.h has been moved to GaudiKernel

!======================== DetDesc v16r1 2005-12-09 ========================
! 2005-12-08 - Juan Palacios
 - Provide inInside and intersectionTicks methods to solids that accept
   points and vectors in coordinates other than cartesian. New methods pass
   call to templated implementations.

! 2005-12-08 - Marco Clemencic
 - Use GaudiUtils::Map instead of std::map as base class for ParamList.
   (part of ParamValidDataObject)

! 2005-12-08 - Juan Palacios
 - Make GeometryInfoPlus::initialize() throw exception instead of bombing out
   if UpdateManagerSvc is not found.

! 2005-12-07 - Marco Cattaneo
 - Remove component library:
   . Object factories are now in link library
   . Services moved to new DetDescSvc package
   . Job option ApplicationMgr.DLLs += { "DetDesc" } is obsolete

!======================== DetDesc v16r0 2005-12-07 ========================
! *********** Requires MathCore-5_06_02 or higher.************************

! 2005-12-07 - Juan PALACIOS
 - Move implementation of DetectorElement::name() method to .cpp file. 
   Implementation in header was causing problems with forward declaration
   of class IRegistry.
 - Small changes using new Transform3D constructors and Point3D multiplication
   by scalar.

! 2005-12-07 - Marco Cattaneo
 - Remove remaining CLHEP dependencies (SystemOfUnits.h, requirements)
 - Remove LHCbPlane3D.h, ClhepToStream.h, now obsolete
 - Remove all StreamBuffer serialize() methods and ISerialize interfaces
 - Remove unneccessary include statements

! 2005-12-06 - Juan PALACIOS
 - Use ROOT::Math::Plane3D class, instead of temporary/obsolete LHCbPlane3D
 - Changes to adapt to improved Transform3D interface.

! 2005-12-05 - Juan Palacios
 - Add class Gaudi::Plane3D as stop-gap while MathCore equivalent is implemented.
   Supports only double precision cartesian representation.
 - Fix remaining MathCore-related compilation problems.

! 2005-12-02 - Juan Palacios
 - Add Kernel/LHCbDefinitions to requirements
 - Change CLHEP geometry classes to LHCbDefinitions typedefs:
            * These typedefs point to MathCore classes with the
              exception of Gaudi::Plane3D, which pointe to HepPoint3D.
              Awaiting implementation of MathCore Plane3D class.
 - Make changes to all code to adapt to MathCore syntax

!======================== DetDesc v15r6 2005-12-02 ========================
! 2005-12-02 - Marco Cattaneo
 - Remove MsgStream from AlignmentCondition default constructor, breaks Reflex

! 2005-11-29 - Marco Clemencic
 - Bug fix in UpdateManagerSvc

! 2005-11-25 - Juan Palacios
 - method sensitiveVolumeID(const HepPoint3D& globalPos ) const now looks 
   recursively for the last daughter detector element in the hierarchy to
   contain the point. Along the way a specialised DetectorElement should
   overload the method to take control and end the recursion.

! 2005-11-24 - Juan Palacios
 - Add method const int sensitiveVolumeID(const HepPoint3D& globalPos ) const
   to IDetectorElement interface. Provide default implementation in 
   DetectorElement base class. At the moment it returns invalid number (-1).

!======================== DetDesc v15r5 2005-11-21 ========================
! 2005-11-17 - Marco Clemencic
 - Use "long long" instead of "longlong" in EventClockSvc properties.
 - Cache UpdateManagerSvc pointer in DetDesc::Services instead of in each
   DetectorElement instance.
 - Minor clean-up in the ParamValidDataObject-related classes.
 - Added 2 missing virtual destructors in IUpdateManagerSvc.h

! 2005-10-05 - Marco Clemencic
 - Moved EventClockSvc properties from "long" to "longlong".

!======================== DetDesc v15r4 2005-09-19 ========================
! 2005-09-19 - Marco Cattaneo
 - Move ICondDBAccessSvc and ICondDBSvc interfaces back to DetCond package

! 2005-09-19 - Matt Needham
 - Add radiation and interaction length calculation to elements

! 2005-09-18 - Marco Clemencic
 - ParamValidDataObject: print also the comments when printing the parameters

! 2005-09-12 - Marco Clemencic
 - Fixed a memory leak in UpdateManagerSvc occurring when registering without
   condition

! 2005-08-30 - Marco Cattaneo
 - Fix some doxygen warnings

! 2005-08-26 - Juan Palacios
 - Added possibility to apply misalignments about an arbitrary pivot in the
   local frame of the detector element. Changes to IGeometryInfo public
   interface, and GeometryInfoPlus and AlignmentCondition public interfaces
   and implementations. Interfaces are backwards compatible but all clients
   of DetDesc require re-compilation.

! 2005-08-25 - Marco Clemencic
 - Fixed a bug in UpdateManagerSvc. It was not protected against changes in the
   list of "head" items (those which are not used by any other item) happening
   while updating everything in UpdateManagerSvc::newEvent(). Now the situation
   is properly handled.
 - Added DetectorElement::conditionBegin() and DetectorElement::conditionEnd()
   to allow efficient loops over the declared conditions.

! 2005-08-25 - Nicolas Gilardi
 - Added a method to return the list of the names of the conditions used in a
   DetectorElement.

! 2005-08-16 - Marco Clemencic
 - Added to TabulatedProperty the method update, needed to change the content
   of the object when a new version is retrieved from CondDB
 - Fixed a bug in the XML string generated by TabulatedProperty::toXml()

! 2005-08-15 - Marco Clemencic
 - Fixed a bug in ParamValidDataObject: the parameter's comments where not
   really added.
 - Improved the handling of parameter's comments in ParamValidDataObject
   (they can be removed by setting the comment to an empty string)
 - Fix in Condition: comments are properly put in the generated XML string
 - Increased the precision used when converting Param<double> to string.
 - Added the method toXml() to TabulatedProperty in order to make it simple
   to generate XML strings to store in the CondDB (as it was already done
   for Condition)
 - Added to TabulatedProperty the method update, needed to change the content
   of the object when a new version is retrieved from 

! 2005-08-01 - Marco Clemencic
 - fixed a Win32 warning about Param.h and a bug when writing empty vectors.

!======================== DetDesc v15r3 2005-07-15 ========================
! 2005-07-14 - Juan Palacios
 - Registering of conditions and parent IGeometryInfos enabled in 
   GeometryInfoPlus enabled and re-structured. Automatic re-calculation
   of transformation matrices if parents changed now done through 
   UpdateManagerSvc.

! 2005-07-14 - Marco Clemencic
 - Now it is possible to register an object to the UpdateManagerSvc without
   any condition

! 2005-07-14 - Marco Clemencic
 - EventClockSvc sets the DetDataSvc event time at initialization.

! 2005-07-13 - Juan Palacios
 - Added UpdateManagerSvc to GeometryInfoPlus.
 - Changed StatusCode IGeometryInfo::updateMatrices(gi_iterator, gi_iterator)
   to StatusCode IGeometryInfo::updateChildren() to have an 
   updateManager-compatible signature, so IGeometryInfo interface changed 
   again.
 
 - Re-structured GeometryInfoPlus initialisation.
 - Register GeometryInfoPlus::cache() and GeometryInfoPlus::updateChildren() 
   methods with AlignmentCondition.

! 2005-07-08 - Marco Clemencic
 - UpdateManagerSvc now registers as IncidentListener to BeginEvent
 - Added the IncidentListener EventClockSvc to set the event time in DetDataSvc

! 2005-07-07 - Marco Cattaneo
 - Remove the dictionary stuff, moved to DetSys

! 2005-07-07 - Marco Clemencic
 - Moved interfaces from DetCond (for python bindings)
 - TabulatedProperty inherits from ValidDataObject (first step to have it
   in the CondDB)

! 2005-07-06 - Juan Palacios
 - Add public methods cache and updateMatrices to IGeometryInfo.h to allow
   changing delta transformation matrices and propagating changes to daughters.
 - Add or change implementations in GeometryInfoPlus class.

! 2005-07-05 - Juan Palacios
 - Remove GeometryInfo class.
 - Add methods to re-set AlignmentConditions to IGeometryInfo.

! 2005-07-03 - Juan Palacios
 - Add dict directory with dictionary generation. Add necessary patterns to 
   requirements file (from P. Mato).

! 2005-06-29 - Juan Palacios
 - Add constructor to AlignmentCondition. Allows construction from 
   transformation parameters.
   Add methods to GeometryInfoPlus to change its AlignmentCondition via
   transformation parameters.

!======================== DetDesc v15r2 2005-06-24 ========================
! 2005-06-24 - Juan Palacios
 - delete all dynamically allocated matrices and pointer to MsgStream in 
   GeometryInfoPlus destructor.

! 2005-06-23 - Marco Clemencic
 - Modified the UpdateManagerSvc in order to allow changes in item's IOV and 
   to find objects using the CondDB path.

! 2005-06-21 - Marco Clemencic
 - Fixed a bug in the UpdateManagerSvc (possible seg. faults when navigating
   from children to parents)

! 2005-06-20 - Juan Palacios
  - DetDesc/Condition.h 
     change toXml(const std::string) method to const method.

  - DetDesc/IGeometryInfo.h 
     Add virtual const AlignmentCondition* alignmentCondition() const method
     to return pointer to GeometryInfo's AlignmentCondition

  - src/Lib/AlignmentCondition.cpp
     Change most MSG::DEBUG to MSG::VERBOSE

  - src/Lib/Condition.cpp
     Add ClassID attribute to string returned by toXml method. Allows 
     convertor to generate AlignmentCondition if needed.

  - src/Lib/GeometryInfo.h and GeometryInfoPlus.h
     Add virtual const AlignmentCondition* alignmentCondition() const method
     to return pointer to GeometryInfo's AlignmentCondition

  - src/Lib/GeometryInfo.icpp and GeometryInfoPlus.cpp
     Implement virtual const AlignmentCondition* alignmentCondition() const
     methods.

  - src/Lib/GeometryInfoPlus.cpp
     Throw exception when required condition not found in DataSvc.
     Re-structure initialization of transformation matrices.

!======================== DetDesc v15r1 2005-06-13 ========================
! 2005-06-13 - Marco Cattaneo
 - Calculate effective number of nucleons N() from A() of materials

! 2005-06-08 - P. Koppenburg
  - src/Lib/GeometryInfoPlus.cpp, LAssembly.cpp
    . Changed all DEBUG to VERBOSE
    
! 2005-06-07 - Marco Clemencic
 - Added requested optimization to UpdateManagerSvc: check the intersection
	 of validities of the head items before starting the update loop.

! 2005-06-03 - Marco Cattaneo
 - Fix some doxygen warnings

! 2005-06-03 Juan Palacios

 - Added ALignmentCondition class files:
          DetDesc/AlignmentCondition.h
          DetDesc/CLIDAlignmentCondition.h
          src/Lib/AlignmentCondition.cpp
          
 - Added new implementation of IGeometryInfo:
          src/Lib/GeometryInfoPlus.cp
          src/Lib/GeometryInfoPlus.h

 - Modify DetectorElement to read in condition path in createGeometryInfo

 - Added misalignment matrix access methods to IGeometryInfo and propagated to
   the GeometryInfo implementations.

 - Modified GeoInfo namespace functions to point to new GeometryInfoPlus
   implementation of IGeometryInfo

 - Modified GeometryInfoException to take as arguments IGeometryInfo* and not
   specific derived class.

 - requirements file change version to v15r1

!======================== DetDesc v15r0 2005-05-24 ========================
! 2005-05-27 - Marco Clemencic
 - Fixed compilation issue on Windows

! 2005-05-13 - Marco Clemencic
 - Added method Condition::toXml() to convert a condition to an XML string.
 - Removed ICondition, ParamSet, IParamSet, IParamSetEditor, UserParam*
 - Added ParamList and cleaned ParamValidDataObject interface
 - Made ParamValidDataObject::update() work (essential for updating)

! 2005-05-03 - Marco Clemencic
 - Added the UpdateManagerSvc and the method DetectorElement::updMgrSvc()
   for an easy access to it
 - Added the possibility of associating an arbitrary number of conditions to
   a DetectorElement and access them by name.

! 2005-03-18 - Marco Clemencic
 - Change in ValidDataObject and SimpleValidity following the change in
   GaudiKernel/IValidity (needs GaudiKernel >= v19r2)
 - Add methods to ValidDataObject to disable/force an update
 - ValidDataObject uses TimePoint instead of ITime*
 - Change in LogVolBase inheritance tree
   (ValidDataObject instead of DataObject+IValidity)

!======================== DetDesc v14r4 2005-03-18 ========================
! 2005-03-18 - Marco Clemencic
 - Add DataStoreLoadAgent helper for preloading the complete Detector store

!======================== DetDesc v14r3 2005-01-25 ========================
! 2005-01-25 - Marco Cattaneo
 - Backwards compatible changes to CLHEP declarations, for CLHEP 1.9
 - Fixes to doxygen comments
 - remove some unneccessary #include

!======================= DetDesc v14r2p1 2004-12-07 =======================
! 2004-12-08 - Marco Cattaneo
 - Fix a few doxygen warnings

! 2004-12-07 - Vanya BELYAEV
 - DetDesc/Element.h 
    remove invalid "inline" qualifier for method Element::isotopeFraction
    (to please LCG dictionaries with Visual C++)

!======================== DetDesc v14r2 2004-07-19 ========================
! 2004-07-19 - Marco Cattaneo
 - Changes for Gaudi v15:
   . Use explicitly CLHEP in requirements
   . Use InterfaceID instead of IID in TransportSvc::queryInterface

! 2004-07-09 - Marco Cattaneo
 - Fix a wrong ifndef in SolidIntersection.h and SolidSubtraction.h
 - Fix many doxygen warnings

!======================== DetDesc v14r1 2003-12-15 ========================
! 2003-12-15 - Marco Cattaneo
 - In requirements, use GaudiKernel v*

!======================== DetDesc v14r0 2003-12-09 ========================
! 2003-12-08 - Marco Cattaneo
 - Move to Gaudi v13 (use GaudiKernel v14r* in requirements)
 - Remove private default constructors of SolidBase and SolidBoolean, 
   to please vc71 

!======================= DetDesc v13r0p1 2003-11-24 =======================
! 2003-11-24 - Marco Cattaneo
 - Fix doxygen warnings

! 2003-11-24 - Guy Barrand
 - Use macro in DetDesc_dll.cpp, to compile on Mac OS X

! 2003-10-22 - Antonis Papanestis
 - Fix bug in ParamSet.cpp to allow creation of UserParameterVectors

!======================== DetDesc v13r0 2003-10-09 ========================
! 2003-10-09 - Marco Cattaneo
 - Removed (commented out) all code and interface changes concerning copy 
   numbers, as this was completely untested and breaks current implementations
   of detector elements with current XmlDDDB 

! 2003-09-20 - Vanya BELYAEV
 - DetDesc/IDetectorElement.h, IGeometryInfo.h, ILVolume.h, ISolid.h 
    Add the empty non-implementer constructor, increase interface minor version 
 - DetDesc/IPVolume.h
    Add method for copy number and increase interface major version
    Add methods to apply and remove misalignment <<< Temporary !! 
 - DetDesc/LogVolBase.h
    add metods to deal with copy numbers of daughter physical volumes 
 - DetDesc/SolidBase.h, SolidBoolean.h, src/Lib/Solid*
    solve the old problem with "anonymous solid" for boolean operations 
 - src/Lib/Interfaces.cpp
    implementation of empty destructors for interfaces 
 - src/Lib/PVolume.h,PVolume.cpp
    implement new copy() method 
    implement methods to apply and remove misalignment <<< Temporary !!
 - src/Lib/LogVolBase.cpp
    add the techniques to manage the copy number

 N.B. New misalignment methods are to be used with care. These are a temporary
      implementation pending a review of alignment requirements.

!======================== DetDesc v12r0 2003-07-02 ========================
! 2003-07-02 - Sebastien Ponce
 - fix to avoid the last valgrind warning (fixes Savannah bug #1057)

! 2003-06-30 - Marco Cattaneo
 - Solid.cpp: release application manager after use

! 2003-06-16 - Sebastien Ponce
 - fixes for gcc 3.2/3.3

! 2003-06-04 - Vanya BELYAEV
 - src/Lib/LAssembly.cpp
 - src/Lib/LVolume.cpp
 - src/Lib/LogVolBase.cpp
 - src/Lib/PVolume.cpp
   Remove calls for virtal methods from destructors. 
   It should fix the problem with Panoramix's crash.

! 2003-05-14 - Vanya BELYAEV 
 - src/Lib/Solid*.cpp  - remove call for virtual method reset() from destructors
                         (fixes Savannah bug #135)

! 2003-04-25 - Sebastien Ponce
 - fixes after valgrind tests
 - application of code conventions

! 2003-04-23 - Sebastien Ponce
 - yet a new restructuration : DetDesc was split into three parts : Det/DetDesc
   itself containing the geometry description, Det/DetDescCnv containing the
   DetDesc converters and Tools/XmlTools containing the XmlParserSvc and the
   XmlCnvSvc. No change in functionnality.

! 2003-04-23 - Sebastien Ponce
 - restructuration of the DetectorElement and condition objects in order to
   share code. The notion of ValidDataObject and ParamValidDataObject as well
   as the ICondition ans IParamSet interfaces were introduced.

!======================== DetDesc v11r9 2003-04-15 ========================
! 2003-04-15 - Sebastien Ponce
 - fix a memory leak in DetectorElement reported by valgrind (bug #396)
 - fix missing include file for compiling under windows
 - add virtual destructor to IConditionInfo 

! 2003-04-04 - Ivan BELYAEV
 - src/SolidSphere.cpp        the next iteration of bug removal from setBP method   
 - src/SolidCons.cpp          the next iteration of bug removal from setBP method   
 - src/SolidTubs.cpp          the next iteration of bug removal from setBP method   
 - src/SolidSolidPolycone.cpp the next iteration of bug removal from setBP method   

! 2003-04-03 - Vanya BELYAEV
 - src/SolidSphere.cpp     reimplement the SolidSphere::setBP   to take into account 
                           *ALL* exceptional cases. 
 - src/SolidCons.cpp       reimplement the SolidCons::setBP     to take into account 
                           *ALL* exceptional cases. 
 - src/SolidTubs.cpp       reimplement the SolidTubs::setBP     to take into account 
                           *ALL* exceptional cases. 
 - src/SolidPolycone.cpp   reimplement the SolidPolycone::setBP to take into account 
                           *ALL* exceptional cases. 

      I guess that some day I need to reimplement "setBP" 
      method for all other solids also :-((( 
                           

! 2003-04-01 - Sebastien Ponce
 - add the possibility to use parameters for the indexes of physical volumes
   inside parametrized volumes
 - corrected new code for gcc 3.2

! 2003-03-28 - Vanya BELYAEV
 - src/Lib/SolidSphere.cpp    fix a bug, observed and reported by 
                              Antonis Papanestis.

! 2003-01-17 - Sebastien Ponce
 - support for gcc 3.2

!==================== DetDesc v11r8 2002-12-13 ============================
! 2002-12-13 - Ivan Belyaev
 - DetDesc::Services        fix a problem with resetting a static pointer 
                            after the deletion of the object
 - cmt/requirements         increase the version 

!===================== DetDesc v11r7 2002-12-09 =============================
! 2002-12-09 - Sebastien Ponce
 - Bug fix on GeometryInfo in the destructor : reset() should not be called
 - Bug fix on DetectorElement in the destructor : reset() should not be called
   there. This bug was actually there for long and was hidden by memory leaks

!===================== DetDesc v11r6 2002-12-03 =============================
                version v11r5 was built on v10r5b branch
                this version uses Gaudi project v11r*
! 2002-11-21 - Sebastien Ponce
 - many modifications and fixes in order to remove all memory leaks from
   this package.
 - some optimization by caching of services references. Avoid to call
   Service::service too often.

! 2002-11-19 - Sebastien Ponce
 - fix in LogVolBase for missing initialization. Valgrind was complaining.
 - fix LogVolBase, DetectorElement and LVolume for memory leaks.

! 2002-11-04 - Sebastien Ponce
 - modified the level of the message telling that no specialized converter was
   found for a given detector element. Now this is a DEBUG message except if
   the XmlCnvSvc does not allow generic conversion. In this last case, it is
   an ERROR message.

!===================== DetDesc v11r2 2002-10-29 =============================
! 2002-10-30 - Ivan Belyaev
 - DetDesc/SolidMath.h  
  fix a trivial bug (my stupid misprint!!!) for calculation of 
  intersection of the line with the cone 

! 2002-10-29 - Florence Ranjard
   merge v11r1b branch with main trunk
 - requirements - use new versions

! 2002-10-29 - Vanya Belyaev
 - SolidSphere.h: bug fix

!====================== DetDesc v11r1p1 2002-10-11 ============================
                           built on v11r1b branch
! 2002-10-11 - Florence Ranjard
 - requirements - use GaudiKernel v13r* and all new versions

!===================== DetDesc v11r1 2002-10-02 ================================
! 2002-10-02 - Marco Cattaneo
 - requirements: set version to v11r1
 - SolidTrap.cpp, SolidPolycone.cpp, SolidBox.h: use fabs() instead of abs() 

!===================== DetDesc v11r0 2002-07-16 ==============================
! 2002-07-16 - Florence Ranjard
 - requirements - use CLHEP 1.8.0.0

! 2002-07-13 - Olivier Callot
 - Change the LAssembly cover creation message from INFO to DEBUG.

! 2002-07-11 - Sebastien Ponce
 - implementation of reinitialize method for XmlCnvSvc

!====================== DetDesc v10r3 2002-07-09 ==============================
! 2002-07-03 - Olivier Callot
 - Added a 'cover' box to the Assembly volumes, to decide faster in the 
   Transport Service if we are outside the assembly. Gains 1/3 of the time...
 - Clean-up of the 'FindLocalGI' function of the Transport Service.
 - Fix a few minor problems with error printing in the Transport Service, 
   thanks to Witold Pokorski.

! 2002-06-22 - Olivier Callot
 - Replace all prints by calls to MsgStream with "TransportSvc" as name.
   VERBOSE is for experts, Problems are reported at ERROR level.

! 2002-06-21 - Olivier Callot
 - Fix the findLocalGI as the previous fix introduced a bug. New argument
   to pass the top geometry, i.e. LHCb master.
 - More printing when an inconsistency is detected. Gives the material and
   the volume name, to allow better understanding

! 2002-06-03 - Sebastien Ponce
 - bugfix on the unit checker : function sqrt is considered as returning a
   unit if its argument has one

!====================== DetDesc v10r2 2002-06-03 =============================

! 2002-06-03 - Olivier Callot
 - Fix the TransportSvc initial step, where a good local geometry has to be
   found and memorized. Affects TransportSvc.cpp, TransportSvcFindLocalGI.h and
   TransportSvcGoodLocalGI.h . Note that the debug printing is still there, 
   with a flag to switch it off by default.
 - Try to remove some print of inconsistencies when merging Ticks in the
   transport service, allowing two intersection of the same material to
   overlap. This occurs in Rich1.
 - Introduce a tolerance in DetDesc/VolumeIntersectionIntervals.h when 
   comparing floating point numbers for equality.
 - Remove intersections with radlength below threshold in LVolume.cpp, and also
   improve the printing of clashes in the merging of intersections.

! 2002-05-31 - Pere Mato
 - Modified the function that calculates the radiation length of a mixture.
   The attribute "radlen" specified in the XML file takes precedence
   to the calculated value.
 - Corrected bug in the calculation of interaction length for mixtures.

! 2002-05-30 - Sebastien Ponce
 - yet another bugfix on the unit checker : number may start with a dot.
 - angles are no more tested for units since a angle has no dimension.
   For those who don't believe it, think that pi*rad is the division of
   a length (the length of a circle) by another length (its diameter).

! 2002-05-29 - Sebastien Ponce
 - bugfix on the unit checker : floats with exponents were not correctly
   parsed and were taken for addition or subtraction

! 2002-05-28 - Sebastien Ponce
 - implements a more clever test for checking units. Basically everything is
   tested correctly except :
    o when a product/division of units does not have any unit, it thinks it
      has one
    o every parameter in an expression is considered as having a unit
    o functions are considered returning unitless values, except for abs
 - adds a new JobOption (CheckUnits) that tells whether the unit checking
   should be done or not. Default value is true, which means check them.

! 2002-05-26 - Vanya Belyaev
 - doc/DoxyFile.cfg                : new file 
 - src/Test/SolidsTest.cpp         : remove 
 - cmt/requirements                : use new standard patterns

! 2002-05-25 - Vanya Belyaev
 - src/component/MaterialBudgetAlg : remove 
 - src/Lib/SolidBoolean.cpp        : improve the printout  

! 2002-05-24 - Sebastien Ponce
 - Message "found element DDDB at top level of xml file" went to VERBOSE mode
 - update this file to the new release notes format (What a pain !)

!====================== DetDesc v10r1 release 2002-05-23 ======================
! 2002-05-22 - Marco Cattaneo
 - XmlBaseConditionCnv.cpp, XmlBaseDetElemCnv.cpp:
   change severity of initialisation status message to MSG::DEBUG

! 2002-05-21 - Ivan Belyaev
 - DetDesc/SolidSphrere.h
 - src/Lib/SolidSphere.cpp 
   fix the bug in calculation of intersection ticks. 
   Add the tiny optimization into "intersectionTicks" method  

! >>>>>>>>>>>>>>>>>>>>>>>> DetDesc v10r0 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<

! 2002-05-15 - Vanya Belyaev
 - DetDesc/SolidTicks.h
   fix my stupid bug (thanks to Olivier)
 - DetDesc/VolumeInytersectionIntervals.h
   fix my stupid bug (thanks to Olivier)

! 2002-05-13 - Vanya Belyaev
 - DetDesc/SolidMath.h 
        fix trivial bug in finding the intersection of the 
        line and the conical surface 
 - src/Lib/SolidPolyHedronHelper.cpp 
        fix the bug with constructor of the Plane3D from point and normal
 - SolidTrd, SolidTubs, SolidCons, SolidSphere 
        improve a little bit the printout  
 - src/Test/SolidsTest.cpp 
        primitive application to perform some tests of Solids. 
 - cmt/requirements 
        add the test application  

! 2002-05-12 - Vanya Belyaev
  - DetDesc/SolidBase.h
    improduce tolerance parameter for bounding box, 
    bounding sphere and bounding cylinder - preparation for future tolerance 

! 2002-05-11 - Vanya Belyaev
  - modified files:
    DetDesc/DetDesc.h
    DetDesc/SolidBase.h
    DetDesc/SolidBoolean.h
    DetDesc/SolidBox.h
    DetDesc/SolidChild.h
    DetDesc/SolidCons.h
    DetDesc/SolidPolyHedronHelper.h
    DetDesc/SolidPolycone.h
    DetDesc/SolidSphere.h
    DetDesc/SolidTicks.h
    DetDesc/SolidTrap.h
    DetDesc/SolidTubs.h
    DetDesc/SolidUnion.h
    DetDesc/VolumeIntersectionIntervals.h
    src/Lib/DetDesc.cpp
    src/Lib/DetectorElement.cpp
    src/Lib/LVolume.cpp
    src/Lib/SolidBase.cpp
    src/Lib/SolidBoolean.cpp
    src/Lib/SolidBox.cpp
    src/Lib/SolidChild.cpp
    src/Lib/SolidCons.cpp
    src/Lib/SolidIntersection.cpp
    src/Lib/SolidPolyHedronHelper.cpp
    src/Lib/SolidPolycone.cpp
    src/Lib/SolidSphere.cpp
    src/Lib/SolidSubtraction.cpp
    src/Lib/SolidTrap.cpp
    src/Lib/SolidTrd.cpp
    src/Lib/SolidTubs.cpp
    src/Lib/SolidUnion.cpp
    src/component/MaterialBudgetAlg.cpp
      Significant upgrade of functionality of SolidBase class. 
      Now SolidBase  contains parameters of "bounding box", 
      "bounding sphere" and "bounding cylinder". Several 
      optimization methods are implemented for navigation and 
      for finding the "intersection ticks". 
      Also bug with SolidTrd is fixed.

  - new file:
    DetDesc/SolidMath.h  
      mathematical utilities for fast and effective 
      calculationof interection ticks with primitives - 
      planes , spheres, cylinders and cones  

! 2002-05-04 Vanya Belyaev
  - src/Lib/LVolume.cpp  
    Implement a bright idea of O.Callot for major optimization 
    of "LVolume::intersectLine" method
  - src/component/MaterialBudgetAlg.h,.cpp  
    new algorithm to evaluate the material budget 
    between given point to given z-plane. It produces 2D histogram of 
    the distance in radiation length units between teh initial point 
    to the (xy)-point in the reference plane.
  - cmt/requirements   
    add explicit dependence on AIDA to allow the compilation
    of Material Budget Algorithm. I know that it is not ideal 
    solution, but the simplest one for a moment. 
    Need to be revisited in the future. 
  - src/component/DetDesc_load.cpp  
    add declaration of Material Budget Algorithm and redesign tehoveral layout
    to improve readability 
  - DetDesc/ISolidFactory.h 
    add MACRO DECLARE_SOLID for declaration of Solid Factories
  - DetDesc/SolidFactory.h
    add the MACRO IMPLEMENT_SOLID for implementation of Solid Factories
  - src/component/SolidFactories.cpp
    rewrite using new MACROs

! 2002-05-02 Sebastien Ponce
  - Bug fix concerning the checking for units when calling the expression
    evaluator (XmlCnvSvc class). This checking is still very very primitive.
    It has to be improved !

! 2002-04-24 Sebastien Ponce
  - Bug fix concerning user parameters of type string (remove the added space
    in front of them).
  - Added the possibility to "double quote" strings in the value of a user
    parameter.

! 2002-04-24 Pere Mato
  - Removed warnings in Windows (added base class IInterface in IConditionInfo)

! 2002-04-24 Vanya Belyaev 
  - Fix problems with Transport Service 

! 2002-04-19 (M.Cattaneo)
  - Use GaudiKernel v12r*, XERCES v16r* (for Gaudi v10)

! 2002-04-03 - Vanya Belyaev
  - change the layout of TransportSvc-files 
  - fix the problems with uage of Assemblies for TransportSvc 
    (infinite loops observed by O.Callot for Rich geometry)

! 2002-02-21 - Sebastien Ponce
  - change the message of the XmlParserSvc from INFO to DEBUG mode

! 2002-01-22 - Sebastien Ponce
  - Handle exceptions of the xerces parser in the XmlParserSvc in order that
    they don't go out of it

! >>>>>>>>>>>>>>>>>>>>>>> DetDesc v9r2 <<<<<<<<<<<<<<<<<<<<<<<<<

! 2002-01-22 - Sebastien Ponce
  - Bug fix on the Condition converters, thanks to David
  - Better handle of the DTD version : minor version was considered as a major
    one
  - Implement versioning for the material DTD

! >>>>>>>>>>>>>>>>>>>>>>> DetDesc v9r1 <<<<<<<<<<<<<<<<<<<<<<<<<

! 2002-01-21 - Sebastien Ponce
  - Remove all warnings + some bug fixes

! 2002-01-18 - Vanya Belyaev
  - XmlIsotopeCnv and XmlElementCnv bug fin in signature of i_fillObj
    and i_processObj methods 
  - Mixture,Element and Material classes - reduce compiler warnings and 
    improve (a little bit) printout        

! 2002-01-18 - Sebastien Ponce
  - changes in the signature of method i_fillSpecificObj for the user
    user specilized converters of detector elements. It now provides the
    address of the new detector element. The old method was kept for
    backward compatibility and is called by the default implementation of
    the new one.

! 2002-01-17 - Sebastien Ponce
  - bug fix in GeometryInfo.cpp, in the printOut method. Some exceptions were
    not catched there
  - bug fix in GeometryInfo.icpp, in the convertion of npath to rpath

! 2002-01-10 - Flr
   - use XERCES v15r* instead of v1*
   - avoid warnings in some files due to XERCES header files

! 2001-12-18 - Sebastien Ponce
   - improvement in some warning message
   - Bug fix in the code for general trapezoids.

! 2001-12-14 - Andrea Valassi
   Changes needed to use the "update" functionality for Condition objects.
   - introduce Condition::update(Condition&) to deep copy a condition
   - comment out the overloaded operator= (which also deep copies the
     properties of a DataObject, like its registry and ref counts) 

! >>>>>>>>>>>>>>>>>>>>>>> DetDesc v9r0 <<<<<<<<<<<<<<<<<<<<<<<<<

! 2001-12-13 - Andrea Valassi
   - Various changes concerning condition data.
     - add IConditionInfo interface and ConditionInfo class and specific ones
       for alignment, calibration, readout, slowcontrol and fastcontrol
     - implement createXxxInfo methods in DetectorElement
     - decode xxxinfo tags in XmlBaseDetElemCnv
     - add createReadOut in DetectorElement
     - add methods to print parameters in IUserParameterSet and Condition
       remove printOut method and operator<< from ValidDataObject
     - bug fix for Windows: void method cannot return another void method
     - bug fix in XmlBaseConditionCnv: missing 3rd argument in i_fillObj
       (overloaded from XmlGenericCnv)

! 2001-12-13 - Sebastien Ponce
   - bug fix : no exception should go out of createObj.
   - improvement concerning a warning message which was not precise enough

! 2001-12-11 - Sebastien Ponce
   - implementation of usage of the condition database. This includes new
     objects and associated converters (like condition and XmlConditionCnv).
     The condition object is extensible, as was detectorElement. Thus, there
     is a templated XmlUserConditionCnv that could be extended by users as it
     was the case for detector elements.
   - the names for parameter and userParameter(Vector) changed. It is now
     macro and param(Vector). For backward compatibility, old names are still
     understood at this time.

! 2001-11-26 - Sebastien Ponce
   - use new version of CLHEP (1.7.0.0)

! 2001-11-20 - Sebastien Ponce
   - make use of the new version of GaudiKernel and GaudiSvc. One consequence
     is the removal of the class XmlAddress
   - centralization of address creations in conversion services, as suggested
     by the new architecture
   - add a parseString method on the XMLParserSvc. This allows to parse XML
     directly from a string
   - use of the new Assembly objects in the XML converters
   - update of the converters to handle the definition of detelem inside
     detelems, without using detelemrefs
   - take care of a possible indexing of detelems and parametrized detelems.
     The numbering is given by adding :<digits> to the name of the element.
   - add support for polycones in the converters
   - add code convention compliance to many files

! 2001-11-18 - Vanya Belyaev
  - new notion of Logical Assembly (class LAssembly) 
  - new base class LogVolBase 
  - small update of ILVolume and IPVolume interfaces 
    (more methods are "const" now)

! 2001-11-05 - Sebastien Ponce
  - XmlLVolumeCnv : add new test for dealing with precision problems in the
    HepVis package.
  - requirements : switch to the XERCES package, forget about the XML one

! 2001-10-25 - Vanya Belyaev 
  - src/lib/SolidSphere.h  bug fix 

! 2001-10-25 - Vanya Belyaev 
  - DetDesc/SolidPolycone.h 
    src/Lib/SolidPolycone.cpp 
    New solid is added 
    (corresponds to Geant3 shape PCON and Geant4 shape G4Polycone)
    SolidFactories.cpp adn DetDesc_load.cpp are updated 

! 2001-08-25 - Vanya Belyaev
  - PVolume.h/.cpp 
    bug fix for uninitialized pointer 

! 2001-08-24 - Vanya Belyaev
  - put some modification to Logical Volume to take into account 
  - the notion of Assembly Volumes

! 2001-08-22 - Sebastien Ponce
  - Implemented a cache on the parsed files in XmlParserSvc. This cache
    uses 2 options from the joboption file : MaxDocNbInCache and CacheBehavior.
    The first one is the maximum number of files cached, the second is the
    behavior of the cache (FIFO for a 0 value, more and more "keep most used"
    as value grows)
	       
! 2001-08-15 - Vanya Belyaev 
  - DetDesc/SolidChild.h bug fix ("protected" versus "public")
 
! 2001-08-10 - Vanya Belyaev 
  - modification in IDetectorElement interface and related classes

! 2001-08-10 - Vanya Belyaev
  - modification in IGeometryInfo interface and related classes  

! >>>>>>>>>>>>>>>>>>>>>>> DetDesc v8 <<<<<<<<<<<<<<<<<<<<<<<<<

! 2001-08-09 - Vanya Belyaev
  - change in ISolid, ILVolume and IPVolume interfaces
  - several changes in solids 
  - simplify LVolume and PVolume classes

! 2001-07-03 - Sebastien Ponce
  - every DetectorElement has an initialize method. This one is now called
    in method fillObjRefs of the base converter.

! 2001-06-28 - Vanya Belyaev
  - IDetectorElement.h
  - remove "inline" attribute from pure abstract methods

! 2001-06-28 - Sebastien Ponce
  - added new way of reaching userParameter. Int, Double and String
    parameters are now handled correctly. An int can be retrieved as an int,
    a double or a string, a double can only be retrieved as a double or
    a string, and a string is a string !


! 2001-06-28 - Sebastien Ponce
  - added interface for caching inthe XmlParserSvc and XmlSvc. This consist
    at this time in a single method : clearCache


! 2001-06-25 - Sebastien Ponce
  - added check on the type for userParameters and userParameterVectors.
    You can no more retrieve the value of these as double if their type is
    neither "int" nore "double"

! >>>>>>>>>>>>>>>>>>>>>>> DetDesc v7 <<<<<<<<<<<<<<<<<<<<<<<<<

! 2001-06-25 - Flr
  - requirements - adapted to GaudiKernel v10, GaudiPolicy v5, CMT v1r8

! 2001-06-22 - Sebastien Ponce
 - Added checks in the userParameter(Vector) processing. If a parameter (or
   one of its properties) is asked that does not exist, an exception is issued

! 2001-06-22 - Sebastien Ponce
 - This implements userParameters and userParameterVectors functions in
   DetectorElement. These can be used to get the list of user parameters
   defined for a given element.

! 2001-06-20 - Sebastien Ponce
 - Added userParameter and userParameterVector in the xml converters.
 - corrected a bug in PVolume constructor.

! 2001-06-14 - Sebastien Ponce
 - New implementation of the whole geometry converters. Several
   functionnalities had been added by the way : recursivity on boolean solids
   and parametrised volumes, 2D and 3D parametrised volumes, composition of
   transformations and a new way to define transformations to be applied to
   solids.
 - this new version was tested with the current detector descriptions
   (mainly Rich1) and had the same result than the old one. However new
   features have not been tested at this time
 - Take care that this version uses v3r2 of the xml code, which is released
   in XmlDDDB v7

! 2001-06-05 - Sebastien Ponce
 - Implementation of the general trapezoid (tag trap) in the xml converters.
 - The converter was tested but the general trapezoid themselves seems not
   to be tested since I had to correct a big bug in it.

! 2001-05-18 - Sebastien Ponce
 - made everything work under windows

! 2001-05-18 - Sebastien Ponce
 - made a true service of XmlParserSvc - use it as a service in XmlCnvSvc
 - as a consequence, moved it in the component library

! 2001-05-16 - Sebastien Ponce
 - changed the version of the IXmlSvc interface
 - added the allowGenericCnv feature there
 - moved the XmlCnvSvc back to the component library

! 2001-05-14 - Sebastien Ponce
 - Created XmlBaseDetElem in order to distinguish between the base class of
   all detector elements converters and the converter for basic detector elements.
 - As a consequence, moved back XmlDetectorElementCnv to the component library.

! 2001-05-10 - Sebastien Ponce
 - This is a complete reimplementation of the xml converters. The underlying
   technology is now DOM while it was SAX. THIS HAS INFLUENCE ON THE USER
   CODE that will need to be updated. THIS IS NON BACKWARD COMPATIBLE.

! 2001-04-30 - Gonzalo Gracia
 - Bug fixed in XmlLVolumeCnv.cpp (optical surfaces were not working properly).
   Fix compilation warning on XmlMixtureCnv.cpp

! 2001-04-26 - Gonzalo Gracia
 - Modified DetDesc_load.cpp to include: 
   DLL_DECL_CONVERTER( XmlSurfaceCnv           );
   DLL_DECL_OBJECTFACTORY( Surface           );

! 2001-04-12 - Gonzalo Gracia
 - Implementation of the conversion procedure for materialref, isotoperef and elementref in catalogs. 
   Include new tag "component" in mixtures
   Allow relative paths in components.
   Changed files:
     XmlCatalogCnv.cpp
     XmlMixtureCnv.cpp/.h

! 2001-03-20 - Vanya Belyaev 
 - src/component/XmlMixtureCnv.cpp - bug fix 

! 2001-03-20 - Sebastien Ponce
 - ISolid.h: Corrected mistype #ifdef logic to avoid using std::deque for gcc-2.91

! 2001-03-15 - Vanya Belyaev
 - DetDesc/ISolid.h
   change std::deque to std::vector for gcc-2.91
 - DetDesc/ILVolume.h
   remove std::deque
 - cmt/requirements
   add -Wno-unused flag for Linux to suppress warnings from XML-xerces

! 2001-03-14 - Sebastien Ponce
 - Avoid non fatal error during parsing to stop the parsing

! 2001-03-13 - Pere Mato
 - Added files ISolid.h, IPVolume.h, ILVolume.h, IDetectorElement.h, IGeometryInfo.h
   ITransportSvc.h from the GaudiKernel package.

! 2001-03-13 - Sebastien Ponce
 - Make validation of xml the default behavior

! 2001-03-13 - Pere Mato
 - Remove some inline specifiers in Element.h that caused problems with windows
   Changed order of include files to avoid warnings

! 2001-03-04 - Vanya Belyaev
 - remove all tabulations from all files

! 2001-03-04 - Vanya Belyaev
 - src/Lib/Element.cpp - 3 lines are modified to please NT compiler 

! 2001-03-04 - Vanya Belyaev
 - class Material now holds the container of tabulated properties 
   ==> add tabulatedProperties() accessors (const and non const) 
       to the Material class 
 - class LVolume  now holds the container of assosiated surfaces
   ==> add surfaces()     acessors (const and non-const) 
       to class LVolume
   NB! These acessors are not available from ILVolume interface! 
 - new class Surface which described (optical) surfaces 
   Probably it is quite useless in DetDesc, but it is important 
   for G4 conversions
 - TabulatedProperty class is modified according to 
   desicions of "coffee-meeting" with P.M. and G.G. 
 - class Material now has output operators to MsgStream and std::ostream
 - a lot of polishing business with exception classes and Materials 
     New and Modified files:
  ===
  DetDesc/DetectorElement.h              - update in exceptions 
  DetDesc/DetectorElement.icpp
  DetDesc/DetectorElementException.h     
  DetDesc/Element.h                       
  DetDesc/Element.icpp                   - new file  
  DetDesc/Isotope.h
  DetDesc/Isotope.icpp                   - new file 
  DetDesc/Material.h
  DetDesc/Material.icpp                  - new file 
  DetDesc/Mixture.h
  DetDesc/Mixture.icpp                   - new file 
  DetDesc/LVolume.h
  DetDesc/LVolume.icpp
  DetDesc/LVolumeException.h
  DetDesc/SolidBox.h
  DetDesc/SolidBox.icpp                   - new file 
  DetDesc/SolidException.h
  DetDesc/XmlCnvException.h
  DetDesc/XmlCnvException.icpp
  DetDesc/CLIDTabulatedProperty.h         - new file 
  DetDesc/TabulatedProperty.h             - new class
  DetDesc/TabulatedProperty.icpp          - new file  
  DetDesc/CLIDSurface.h                   - new file  
  DetDesc/Surface.h                       - new class
  DetDesc/Surface.icpp                    - new file 
  DetDesc/MaterialException.h             - new class  
  DetDesc/SolidTrd.icpp                   - new file 
  DetDesc/SolidCons.icpp                  - new file 
  DetDesc/SolidSphere.icpp                - new file 
  DetDesc/SolidTrap.icpp                  - new file 
  DetDesc/SolidTubs.icpp                  - new file 
  DetDesc/SolidChild.icpp                 - new file 
  DetDesc/SolidBoolean.icpp               - new file 
  ===
  src/component/DetDesc_load.cpp
  src/component/XmlCatalogCnv.cpp
  src/component/XmlCatalogCnv.h
  src/component/XmlElementCnv.cpp
  src/component/XmlIsotopeCnv.cpp
  src/component/XmlLVolumeCnv.h
  src/component/XmlLVolumeCnv.cpp
  src/component/XmlMixtureCnv.cpp
  src/component/XmlTabulatedPropertyCnv.cpp   - new file 
  src/component/XmlTabulatedPropertyCnv.h     - new file 
  src/component/XmlSurfaceCnv.h               - new file 
  src/component/XmlSurfaceCnv.cpp             - new file  
  ===
  src/Lib/DetectorElement.cpp
  src/Lib/Element.cpp
  src/Lib/GeometryInfo.cpp
  src/Lib/GeometryInfo.h
  src/Lib/GeometryInfo.icpp
  src/Lib/GeometryInfoInlines.h             - REMOVED! 
  src/Lib/GeometryInfoMethods.h             - REMOVED!
  src/Lib/GeometryInfoRelations.h           - REMOVED!
  src/Lib/PVolumeInlines.h                  - REMOVED!
  src/Lib/Isotope.cpp
  src/Lib/LVolume.cpp
  src/Lib/LVolumePVolumes.cpp
  src/Lib/Mixture.cpp
  src/Lib/PVolume.cpp 
  src/Lib/PVolume.h
  src/Lib/SolidBox.cpp
  src/Lib/PVolume.icpp                     - new file 
  src/Lib/Material.cpp                     - new file 
  src/Lib/Surface.cpp                      - new file 
  src/Lib/TabulatedProperty.cpp            - new file 
  src/Lib/SolidException.cpp               - new file 
  src/Lib/PVolumeException.cpp             - new file 
  src/Lib/MaterialException.cpp            - new file 
  src/Lib/LVolumeException.cpp             - new file 
  src/Lib/DetectorElementException.cpp     - new file 
  src/Lib/GeometryInfoException.cpp        - new file 

! 2001-02-26 - Vanya Belyaev
 - new class TabulatedProperty, used  to hold some specific properties 
   of materials and surfaces (and might be more?) 

! 2001-02-15 - Gonzalo Gracia Abril & Vanya Belyaev
 - Corrections for proper treatment of rotations
   Mod. files in src/Lib   PVolume.cpp, SolidChild.cpp

! 2001-02-13 - Marco Cattaneo
 - requirements - replace {} with () in macros, to please nmake
 

! 2001-02-11 - Vanya Belyaev
 - remove all *.*.* files to please some CMT macros 

! 2001-02-05 - Flr
 - src/
   add component/
   move all files from src/ to src/component/
 - requirements
   add ignore_pattern package_stamps
   remove apply_pattern packageShr
 - cmt/
   reintroduce Makefile and NMake

! 2001-01-31 - Gonzalo Gracia
 - SolidTrd.cpp: Bug fixed.

! 2001-01-29 - Vanya Belyaev 
 - LVolume:
    o remove IDataProvider, IMessageSvc* from constructor
    o add ISvcLocator* as data member, initialize it in constructor fro Gaudi::svcLocator()
    o update for change in ILVoluem interface (backward compatible)
 - PVolume:
    o Now this class is ABSOLUTELY internal. User shoudl use only interface.
 - all PVolume.* files are moved into src/Lib, where they are used by LVolume.cpp 
 - all CONCRETE Xml*Cnv.h are moved from DetDesc directrory 
 - GeometryInfo
    o Now this class is ABSOLUTELY internal, user shoudl use only interface 
 - all GeometryInfo.* fileas are moved into src/Lib directory, where hey are used by DetectorElement.cpp
 - Xml converters updated to incorporate these changes 

! 2001-01-25 - Vanya Belyaev 
 - Package polishing:
   o small modification to reduce a little bit some compiler warnings 
   o remove the remaining "extern const CLID&" from all places 
   o extract CLID_DetectorElement into separate file to 
     avoid the load of base class, if one need only it's CLID and it's interafce
   o now all CLIDs, defined in DetDesc package belongd to a separate files 
     DetDesc/CLIDxxxx.h (just for convinience and easy maintainance) (is it true?) 
   o remove artificial src/LVolume.cpp 
   o rename CLID_LogicalVolume into CLID_LVolume for better mnemonics 
   o a lot of unnesessary "#include" directives removed from header files. 
 
! 2001-01-25 - Pere Mato
 - Fixed some bugs in Material/Element converters that didn't comply to the latest DTD.
 - Fixed some bugs in the calculation of radiation and absorption lenght.
 - Modified to use the CLHEP expression evaluator function
 - New functionality: use of <parameter \> tag for defining XML parameters instead
   of using XML entyties. The XML files in XMLDDDB package have been changed to 
   exploit that new functionality
 - Changes is the DTD required some changes in the XML converters. These changes are:
   - element geometryinfo has now only attributes
   - default class ID for detelem
   - elementref can now have a fractionmass in addition to natoms attribute

! 2001-01-22 - Vanya Belyaev 
 - Solids , LVolumes , PVolumes, DetectorElements and Geometry Info are "Instectable"
 - restructurization of the package : introduce new library DetDescLib
 - optimization of SolidTrap and SolidTrd 

! 2001-01-16 - Vanya Belyaev 
 - now LVolume could be read/write to database (implementation of serialize methods) 
   (head revision of GaudiKernel v9 is required)
 - A helper class SolidPolyHedronHelper is introduced to simplifyt SolidTrap and SolidTrd shapes 

! 2001-01-16 - Vanya Belyaev 
 - DetDesc/LVolume.h 
 - DetDesc/LVolume.create.... 
 - Add new functionality
   a possibility of 2 and even 3 loops in creation on parametrized volumes.

! >>>>>>>>>>>>>>>>>>>>>>> DetDesc v5 <<<<<<<<<<<<<<<<<<<<<<<<<

! 2000-11-02 - Radovan Chytracek
 - Bug fixes
   o Due to small change in Gaudi a few Xml converters have to be fixed
     to handle it properly, affected converters are XmlGenericCnv,
     XmlCatalogCnv, XmlIsotopeCnv, XmlElementCnv, XmlMixtureCnv.
 - New functionality
   o New materials.dtd is understood by converters, affected converters
     are XmlCatalogCnv XmlIsotopeCnv, XmlElementCnv, XmlMixtureCnv.

! 2000-10-04 - Vanya Belyaev 
 - DetDesc/Solid/SolidTrap.h 
 - DetDesc/Solid/SolidTrap.cpp 
 - A new type of Solid is added (general trapezoid) by request of Velo group. 

! >>>>>>>>>>>>>>>>>>>>>>> DetDesc v4r1 <<<<<<<<<<<<<<<<<<<<<<<<<

! 2000-09-08 - Radovan Chytracek
 - Bug fixes
   o XML converters assumed the input from XML in absolute numbers. Now they
     work internally with raw values. The effect is now that user who wants
     to get the values out of the system in the given units must divide the
     raw values by the corresponding  units.
   o Fixed inheritance in the material classes hierarchy (hopefully the last
     change in this area). No side effect.
   o Fixed accessors for the Element class, needed for the conversion into
     Geant4.
   o Fixed the algorithm for the radiation length in the mixtures.
   o Fixed bug in the XML element converter which did not initialize properly
     the material elements created from scratch.

! >>>>>>>>>>>>>>>>>>>>>>> DetDesc v4 <<<<<<<<<<<<<<<<<<<<<<<<<

! 2000-07-17 - Radovan Chytracek
 - New functionality
   o Switched from XML4C & ICU libraries for XML processing to Apache's XML
     parser for C++ Xerces-C 1.2.0.
   o The new feature allowing generic detector element conversion has been
     introduced. This feature should be used in cases where either specific
     information about user defined detector elements is not needed (e.g.
     visualization) or can be ignored (e.g. testing). This feature is
     triggered by the new property of the XmlCnvSvc called
     "AllowGenericConversion".
 - Bug fixes
   o CLHEP translation vector NAN bug ( appeared after switch to CLEHP 1.5.0.0 )
   o Fixed SAX callbacks for XmlDetectorElementCnv and XMLUserDeCnv.
   o Fixed order of inheritance for DetectorElement subclasses + class ID getters

! 2000-04-04 - Radovan Chytracek
 - New functionality
   o XML support for parametric physical volumes. This means that now one
     is able to place as many copies as required of the same logical volume
     in space by one definition inside XML file. For example having the
     logical volume "wafer" one can compose "vertex station" from 6 positioned
     wafers by only one XML definition instead of repeating the definitions
     of the positions for each wafer separately. This is the first
     implementation of this feature. More optimized implementation will come
     soon.
   o Changed the way of handling hyperlinks. This change was an implication
     of the restructuralization of the XML DB for detector description. It's
     backward compatible in the sense that the old XML DB and new XML DB
     structure are handled by the current implementation in the same way.
     There is a constraint, however, due to which the authors of the XML DB
     files must specify the URIs for references always relative to the
     location of the bootstrap 'dddb.xml' file. This will be improved in the
     next version.

! >>>>>>>>>>>>>>>>>>>>>>> DetDesc v3 <<<<<<<<<<<<<<<<<<<<<<<<<

! 2000-03-28 - Radovan Chytracek
 - New functionality
   o Expressions Parser
     - Check for CLHEP units inside numerical expressions added
     - eval(...) method now checks for CLHEP units by default, to suppress
       this behaviour one must call this method like: eval( "1+1", false );
   o XmlGenericCnv
     - The new DDDB DTD has been enhanced by version attribute of DDDB tag
       (defaults to 3.0). This attribute is now checked inside XmlGenericCnv
       and if differs from version supported by set of XML converters the
       exception is thrown. The version attribute of DDDB tag does not have
       to be explicitly mentioned inside XML data files referencing the given
       DTD. It is, however, available to the XML parser during conversion
       so the version check can be performed.
   o CLHEP Units
     - XML converters assume that CLHEP units are used inside XML data files.
       The expressions parser is used to evaluate values inside XML files
       for that purpose where possible. In case the units are missing the
       exception is thrown with indication where the units are missing.
       However this behaviour can be suppressed if needed, see point 1. above.
     - The XML test database has been updated to tagged version v3. Only this
       version is valid with the new set of XML coverters for detector
       description. This version of XmlDDDB test database has been copied
       into xml subdirectory of DDexample. One can checkout this test database
       from CVS as:  cvs checkout XmlDDDB -r v3

! 2000-03-01 - by Radovan Chytracek
 - New functionality
   o Reflected changes in the detector description DTD concerning
     positions and rotations of physical volumes and solids
   o XmlLVolumeCnv converter updated according to the new DTD
   o New positions
     a) posXYZ    - position in carthesian coordinate system
     b) posRPhiZ  - position in cylindrical coordinate system
     c) posRthPhi - position in spherical coordinate system
   o New rotations
     a) rotXYZ    - rotation in carthesian coordinate system
     b) rotAxis   - rotation by vector and angle (providing theta, phi, angle input)

! >>>>>>>>>>>>>>>>>>>>>>> DetDesc v2r1 <<<<<<<<<<<<<<<<<<<<<<<<<

! 2000-02-26 - Vanya Belyaev 
 - New functionality
   o intersectLine methods are added to LVolume and PVolume (and to their
     interfaces)
   o reset() method is added to LVolume, Pvolume,Solids, GeometryInfo and
     DetectorElements (and to their interfaces)
   o DetDesc/Volumes/doc directory is created and some documentation has been put there
   o update on solid documentation in DetDesc/Solid/doc directory 

! 2000-02-24 - Vanya Belyaev 
 - New functionality
   For all solids "intersectionTicks" method is added (to implement the
   extended ISolid interface). This method is to be used to estimation of the
   distance (in radiation length units) between 2 points. (request of Tracker
   group) Also the documentation in directory DetDesc/Solid/doc is updated.

! 2000-01-26 - Radovan Chytracek
 - New functionality
   Numerical expressions parser support.
   New IXmlSvc interface for XmlCnvSvc service.
   New base template class for user defined detector element converters.
   Support for name based rpath of geometryinfo.

! >>>>>>>>>>>>>>>>>>>>>>> DetDesc v2 <<<<<<<<<<<<<<<<<<<<<<<<<

! 1999-11-22 - Rado Chytracek
 - New functionality
   Detector description persistency changed from proprietary text format to
   industry standard XML. Built full set of XML converters for all data
   objects in detector description model. XML conversion uses IBM XML parser
   for C/C++ and IBM library of classes for Unicode.

! 1999-11-21 - Ivan Belyaev
 - New functionality
   Completely rewritten geometry part of detector description model.
   There are new abstract interfaces: IDetectorElement, IValidity, ILVolume,
   ISolid. Updated abstract interface IGeometryInfo. Geometry is able now
   to describe geometry tree of volumes, locate 3D points in volumes,
   translate local to global coordinates and vice-versa.

! 1999-08-27 - Rado Chytracek
 - New functionality
   o Added support for materials, needs some testing and tuning.
     The design should be able provide data needed either by Geant3 or Geant4.
     The reconstruction needs are unclear but hopefully this design can be
     easily extended to provide required data if needed.
 - Updates
   o Class IDs changed for LogicalVolume from 3 to 1100 and allocated
   new IDs for material objects as: isotopes/1201 elements/1202 mixtures/1203
   list of allocated class IDs can be found on the Web using URL:
   http://lhcb.cern.ch/computing/components/html/clid.html

! >>>>>>>>>>>>>>>>>>>>>>> DetDesc v1 <<<<<<<<<<<<<<<<<<<<<<<<<

! 1999-06-18 - Rado Chytracek 
 - This is a new package for the LHCb detector description.

