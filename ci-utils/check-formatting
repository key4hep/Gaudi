#!/bin/bash -e

. $(dirname $0)/env_setup.sh

if [ -n "${CI}" ] ; then
  job_id="${CI_PROJECT_URL}/-/jobs/${CI_JOB_ID}"
else
  job_id="standalone job"
fi

YAPF_VERSION=$(sed -E -n 's/ *set\(YAPF_VERSION *"([0-9.]*)".*/\1/p' cmake/GaudiProjectConfig.cmake)
sudo pip install yapf==$YAPF_VERSION

export LCG_release_area=${LCG_release_area}:/cvmfs/lhcb.cern.ch/lib/lcg/external
make BUILDDIR=${BUILDDIR} configure

git fetch https://gitlab.cern.ch/gaudi/Gaudi.git ${TARGET_BRANCH}
git diff --name-only --no-renames --diff-filter MA FETCH_HEAD...HEAD | grep -E '\.(h|i?cpp|py)$' | xargs --no-run-if-empty ${BUILDDIR}/apply-formatting || true
echo "From: Gitlab CI <noreply@cern.ch>" > apply-formatting.patch
echo "Date: $(date -R)" >> apply-formatting.patch
echo "Subject: [PATCH] Fixed formatting" >> apply-formatting.patch
echo "" >> apply-formatting.patch
echo "patch generated by ${job_id}" >> apply-formatting.patch
echo "" >> apply-formatting.patch
echo "" >> apply-formatting.patch
git diff >> apply-formatting.patch
git diff --stat --exit-code || ( cat <<EOF
=======================================
 You can fix formatting with:

   curl ${CI_PROJECT_URL}/-/jobs/${CI_JOB_ID}/artifacts/raw/apply-formatting.patch | git am

=======================================
EOF
false )
