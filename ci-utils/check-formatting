#!/bin/bash -e

if [ -n "${CI}" ] ; then
  job_id="${CI_PROJECT_URL}/-/jobs/${CI_JOB_ID}"
else
  job_id="standalone job"
fi

# make sure we have the right versions of the commands
YAPF_VERSION=$(sed -E -n 's/ *set\(YAPF_VERSION *"([0-9.]*)".*/\1/p' cmake/GaudiProjectConfig.cmake)
test "$(yapf --version)" = "yapf $YAPF_VERSION"

CLANG_FORMAT_VERSION=$(sed -E -n 's/ *set\(CLANG_FORMAT_VERSION *"([0-9.]*)".*/\1/p' cmake/GaudiProjectConfig.cmake)
which clang-format-$CLANG_FORMAT_VERSION >/dev/null

git fetch https://gitlab.cern.ch/gaudi/Gaudi.git ${TARGET_BRANCH}
git diff --name-only --no-renames --diff-filter MA FETCH_HEAD...HEAD | \
  grep -E '\.(i?[ch](pp|xx|c)?|cc|hh)$' | xargs --no-run-if-empty clang-format-$CLANG_FORMAT_VERSION -i --style=file || true
git diff --name-only --no-renames --diff-filter MA FETCH_HEAD...HEAD | \
  grep -E '\.py$' | xargs --no-run-if-empty yapf -i || true

echo "From: Gitlab CI <noreply@cern.ch>" > apply-formatting.patch
echo "Date: $(date -R)" >> apply-formatting.patch
echo "Subject: [PATCH] Fixed formatting" >> apply-formatting.patch
echo "" >> apply-formatting.patch
echo "patch generated by ${job_id}" >> apply-formatting.patch
echo "" >> apply-formatting.patch
echo "" >> apply-formatting.patch
git diff >> apply-formatting.patch
git diff --stat --exit-code || ( cat <<EOF
=======================================
 You can fix formatting with:

   curl ${CI_PROJECT_URL}/-/jobs/${CI_JOB_ID}/artifacts/raw/apply-formatting.patch | git am

=======================================
EOF
false )
