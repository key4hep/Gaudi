! ------------------------------------------------------------------------------
! Package     : Det/DetDescChecks
! Responsible : Vanya Belyaev Ivan.Belyaev@itep.ru
! Purpose     : Collection of useful components for checking of
!               Detector Description, Material Budget etc
! ------------------------------------------------------------------------------

! 2011-11-21 - Marco Cattaneo
 - Remove obsolete HepMCBack dependency

!========================= DetDescChecks v5r6 2011-04-26 =========================
! 2011-04-15 - Marco Cattaneo
 - Remove test loaddddb.qmt, was testing DC06, no longer supported
 - Add test loadddddb-sim-mc10.qmt

!========================= DetDescChecks v5r5 2011-02-22 =========================
! 2011-02-01 - Illya Shapoval
 -  Added tests 'loaddddb2011.qmt','loaddddb-sim-2011.qmt'.

!========================= DetDescChecks v5r4 2010-10-25 =========================

! 2010-10-05 - Illya Shapoval
 - Added tests 'loaddddb-sim-2010.qmt','loaddddb-sim-2009.qmt' and
 'loaddddb-sim-MC09.qmt' for checking latest simulation global and local tags
 for 2010, 2009 and MC09 data types.

!======================= DetDescChecks v5r3 2010-05-21 =========================
! 2010-05-07 - Marco Cattaneo
 - Add a test for 2010 DataType

!======================= DetDescChecks v5r2 2010-02-12 =========================
! 2010-02-05 - Marco Clemencic
 - Modified LoadDDDB tests to check the latest local tags on top of the latest
   global tag for the requested data type.

!======================= DetDescChecks v5r1 2010-01-20 =========================
! 2010-01-12 - Marco Clemencic
                 --- Requires Det/DetCond >= v12r9 ---
 - Modified options/LoadDDDB.py to ignore the Online partition heart beat during
   the tests.

!======================= DetDescChecks v5r0 2009-11-27 =========================
! 2009-11-16 - Marco Cattaneo
 - Remove obsolete files DetDescChecks_dll.cpp and DirHbookName.h

! 2009-11-15 - Vanya Belyaev
 - rename algorithms, put minor fixes
 - provide python-scripts to run checks
 - add qmtests for the algorithms
 - remove opts-files & directory
 - cmt/requirements: version increment to v5r0

!======================= DetDescChecks v4r11 2009-07-14 ========================
! 2009-07-09 - Marco Clemencic
 - Added test for 2009 data type.

!======================= DetDescChecks v4r10p1 2009-03-09 ======================
! 2009-03-09 - Marco Cattaneo
 - Fix example for using Oracle CondDB

!======================= DetDescChecks v4r10 2008-11-17 ========================
! 2008-11-17 - Marco Cattaneo
 - Move LoadDDDB algorithm to Det/DetCond
 - Add missing dependency on HepMCBack for QMTest

! 2008-11-06 - Marco Clemencic
 - Modified the option file LoadDDDB.py to use the configurable DDDBConf and
   updated the tests.
   Needs Det/DDDB > v1r13

!======================= DetDescChecks v4r9 2008-09-30 ========================
! 2008-09-26 - Marco Cattaneo
 - Clean up LoadDDDB.py options
 - Add a test for 2008 geometry

!======================= DetDescChecks v4r8 2008-07-27 ========================
! 2008-07-22 - Marco Cattaneo
 - Replace LoadDDDDB.opts by LoadDDDB.py
 - Add example option for accessing Oracle CondDB instead of SQLDDDB

!======================= DetDescChecks v4r7 2008-06-30 ========================
! 2008-06-30 - Marco Cattaneo
 - In requirements, do not build .exe application (can use gaudirun.py) and
   removed obsolete PYTHONPATH directives
 - In VolumeCheck.py, replace initialization to use importOptions, for ease of
   maintenance

! 2008-06-12 - Marco Clemencic
 - Added a QMTest-based test for LoadDDDB.

!======================= DetDescChecks v4r6 2008-04-17 ========================
! 2008-04-17 - Marco Clemencic
 - Improved the output in case of GaudiException in LoadDDDB.

! 2008-04-10 - Marco Clemencic
 - Force the creation of CondDBCnvSvc (if needed) in LoadDDDB::initialize.

!======================= DetDescChecks v4r5 2007-12-21 ========================
! 2007-12-21 - Marco Cattaneo
 - Change CheckOverlap.opts to check whole LHCb by default

! 2007-12-20 - Marco Clemencic
 - Improved the error message of LoadDDDB in case of exceptions.

! 2007-12-19 - Vanya BELYAEV
   see the presentation at T-Rec meeting, 17.12.2007

 - add new algorithm DetDesc::CheckOverlap
   and the conrresponding configuration file options/CheckOverlap.opts

!======================= DetDescChecks v4r4 2007-10-05 ========================
! 2007-10-05 - Marco Cattaneo
 - Remove unneccessary SEAL dependency

! 2007-05-29 - Marco Clemencic
 - Print the database name and tags in the algorithm LoadDDDB.

!======================= DetDescChecks v4r3 2007-03-14 ========================
! 2007-03-14 - Marco Cattaneo
 - Use DDDB instead of explicitly using SQLDDDB, update options accordingly

! 2007-03-14 - Marco Clemencic
 - VolumeCheck.py updated to use SQLDDDB

!======================= DetDescChecks v4r2 2007-03-05 ========================
! 2007-03-05 - Marco Cattaneo
 - Remove obsolete DetDescChecks_load.cpp file

! 2007-02-28 - Marco Clemencic
 - Use SQLDDDB instad of XmlDDDB and XmlConditions
 - Clean up of LoadDDDB.opts

!======================= DetDescChecks v4r1 2007-02-06 ========================
! 2007-02-06 - Marco Cattaneo
 - Get XmlDDDB indirectly via DC06Conditions.opts
 - Remove ApplicationMgr.DLLs options

! 2007-01-31 - Marco Clemencic
 - Added the algorithm LoadDDDB to validate the consistency of the DTS
   (cross references).
 - Added commented out options and requirements to use Det/SQLDDDB.

!======================= DetDescChecks v4r0 2006-12-15 ========================
! 2006-12-15 - Marco Cattaneo
 - Get SystemOfUnits.h from GaudiKernel
 - Remove LHCbDefinitions dependencies

! 2006-12-13 - Pere Mato
 - fixes for new Plugins

!======================= DetDescChecks v3r0 2006-01-26 =========================
! 2006-01-26 - Marco Cattaneo
 - Migrate to envelope volumes and XmlDDDB v30r0

! 2005-12-07 - Marco Cattaneo
 - Migrate to MathCore

!======================= DetDescChecks v2r4 2005-12-07 =========================
! 2005-12-07 - Marco Cattaneo
 - Add XmlConditions to requirements for use with XmlDDDB v27r*

!======================= DetDescChecks v2r3 2005-05-03 =========================
! 2005-05-03 - Vanya BELYAEV
 - small polishing of algorithms
   - use nice new methods "plot2D" (kindly provided by Chris) to
     book and fill 2D histograms.
   - cleanup the code (initialization, etc...)
   - fix multuple "shoots" --> "shots"
   - add the "progress bar" :
     e.g. for VolumeCheckAlg (similar for MaterialBudgetAlg)

VolumeCheckAlg       INFO  Start 3D shots #100000
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

VolumeCheckAlg       INFO  Start XY shots #10000
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

VolumeCheckAlg       INFO  Start YZ shots #10000
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

VolumeCheckAlg       INFO  Start ZX shots #10000

0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

  options/DetDesckChecks.opts
   - rename "Shoots<XX>" -> "Shots<XX>"
  cmt/requirements
   - add usage of Boost library
   - version increment to v2r3

!======================= DetDescChecks v2r2 2005-01-25 =========================
! 2005-01-25 - Marco Cattaneo
 - Remove obsolete doxygen configuration files
 - Update to use latest geometry, consistent with latest detector element
   changes

!=========================== DetDescChecks v2r1 ================================
! 2004-06-29 - Marco Cattaneo
 - Build also an application (DetDescCheck.exe) to make self-contained test
   package

! 2004-06-28 M Needham
 - changes to requirements - need to include AIDA

! 2004-03-01 - Vanya BELYAEV
 - technical improvements
 - use new bases
 - update in cmt/requirements
 - increase the versions

! 2002-08-21 - Juan Palacios
  - modified MaterialBudgetAlg to perform a scan with trajectories distributed
  - flat in pseudorapidity and azimuth angle. User specifies Zplane, eta and
  - Phi bounds and number of eta and Phi bins.

! 2002-07-12 - Witek Pokorski
  - improved grid generation
  - changed/added a few properties for grid

! 2002-07-05 - Witek Pokorski
  - added a possibility of grid-like shooting
  - added application to requirements

! 2002-05-26 - Vanya Belyaev
 - new package
 - src/MaterialBudgetAlg.h,.cpp : algorithm moved from DetDesc package

/** @class MaterialBudgetAlg MaterialBudgetAlg.h
 *
 *  Simple algorithm, which perform the evaluation of the
 *  material budget using Transport Service ("LHCb's GEANE")
 *
 *  The algorithm produces 2 2-dimentional plots with the
 *  evaluationfo the material budget ( in units of radiation length)
 *  between origin vertes and x-y point at the reference plane.
 *  The plot need to be normalized properly. Normalization is given
 *  by histogram number 2. The proper normalization is achieved e.g in PAW
 *  @code
 *  PAW> hi/oper/div 1 2 10
 *  PAW> hi/plot     10     lego1
 *  @endcode
 *
 *  The full list of algorithm properties and their default values:
 *  <ul>
 *  <li> @p ShootingPoint  Position of the "origin vertex"
 *                             (default value <tt>{ 0. , 0. , 0. }</tt>)
 *  <li> @ Shoots          Number of random shoots per event
 *                                           (default value is @p  1000 )
 *  <li> @ zPlane          @p Z -position of the reference plane
 *                                           (default value is @p 12000 )
 *  <li> @ xMax            Maximal value of @p X at reference plane
 *                                           (default value is @p  4000 )
 *  <li> @ yMax            Maximal value of @p Y at reference plane
 *                                           (default value is @p  3000 )
 *  <li> @ xMin            Minimal value of @p X at reference plane
 *                                           (default value is @p     0 )
 *  <li> @ yMin            Minimal value of @p Y at reference plane
 *                                           (default value is @p     0 )
 *  <li> @ nBx             Number of bins in @p X -direction
 *                                           (default value is @p    50 )
 *  <li> @ nBy             Number of bins in @p Y -direction
 *                                           (default value is @p    50 )
 *  <li> @ TransportSvc    The name of Gaudi Transport Service
 *                                  (default value is @p "TransportSvc" )
 *  <li> @ RndmService     The name of Gaudi Random Numbers Service
 *                                    (default value is @p "RndmGenSvc" )
 *
 *  @author Vanya Belyaev Ivan.Belyaev@itep.ru
 *  @date   23/04/2002
 */

 - src/VolumeCheckAlh.h,.cpp    : algorithm for extensive and detailed tests
                                  of Logical Volumes and Assemblies
/** @class VolumeCheckAlg VolumeCheckAlg.h
 *
 *  Simple algorithm which performs an extensive and detailed
 *  check of logical volume
 *
 *  Algorithm has one mandatory property which is the full
 *  name of logical volume to be tested.
 *
 *  The algorithm performs an extensive printout of
 *  logical volume, its solid( if any) and material(if any).
 *
 *  The algorithm produces 8 2-dimentional plots with
 *  material profile for the given logical volume.
 *  The actual profiles could be obtained by the proper
 *  normalization of distributions, e.g. using PAW:
 *  @code
 *  PAW > hi/li
 *
 *  ===> Directory :
 *          1 (2)    3D-Material Budget for /dd/Geometry/Pipe/BeamPipe
 *          2 (2)    3D-Material Budget (N) for /dd/Geometry/Pipe/BeamPipe
 *          3 (2)    XY-Material Budget for /dd/Geometry/Pipe/BeamPipe
 *          4 (2)    XY-Material Budget (N) for /dd/Geometry/Pipe/BeamPipe
 *          5 (2)    YZ-Material Budget for /dd/Geometry/Pipe/BeamPipe
 *          6 (2)    YZ-Material Budget (N) for /dd/Geometry/Pipe/BeamPipe
 *          7 (2)    ZX-Material Budget for /dd/Geometry/Pipe/BeamPipe
 *          8 (2)    ZX-Material Budget (N) for /dd/Geometry/Pipe/BeamPipe
 *  PAW > hi/oper/div 1 2 10
 *  PAW > hi/oper/div 3 4 30
 *  PAW > hi/oper/div 5 6 50
 *  PAW > hi/oper/div 7 8 70
 *  PAW > hi/plot 10 lego1.sph
 *  PAW > hi/plot 30 lego1
 *  PAW > hi/plot 50 lego1
 *  PAW > hi/plot 70 lego1
 *  @endcode
 *
 *  The first pair of the plots (1&2) represents the material budget
 *  of the volume itself in spherical coordinates. Thus the histogram 10
 *  form example above shold have the same "topological" characteristics
 *  as the whole logical volume. This distribution must be viewed using
 *  SPHERICAL coordinates  (option @p SPH for @p PAW).
 *
 *  Other pairs of distributions represent the xy (3&4), yz(5&6) and
 *  zx(7&8) projections of the volume.
 *
 *  The upper and lower limits of the histograms are evaluated automatically
 *  for logical volumes of the type LVolume. For logical volumes of the type
 *  LAssembly ("Logical Assembly") the parameters shoudl be given by algorithm
 *  properties  @p MinX, @p MaxX , @p MinY, @p MaxY , @p MinZ and @p MaxZ .
 *
 *  The full list of algorithm properties and their default values:
 *  <ul>
 *  <li> @p Volume    The name (full path)  of logical volume to be tested
 *                                                           (@b mandatory )
 *  <li> @p Shoots3D  Number of random shoots for 3D-profile
 *                                                 (default value @p 10000 )
 *  <li> @p ShootsXY  Number of random shoots for XY-profile
 *                                                 (default value @p 10000 )
 *  <li> @p ShootsYZ  Number of random shoots for YX-profile
 *                                                 (default value @p 10000 )
 *  <li> @p ShootsZX  Number of random shoots for ZX-profile
 *                                                 (default value @p 10000 )
 *  <li> @p Null      Position of the "null vertex" for 3D-profile
 *                                (default value <tt>{ 0. , 0. , 0. }</tt>)
 *  <li> @p MinX      Minimal value of @p X for 2D-projection profiles.
 *                    It is used only for logical assemblies
 *                                             (default value is @p -10000 )
 *  <li> @p MaxX      Maximal value of @p X for 2D-projection profiles.
 *                    It is used only for logical assemblies
 *                                             (default value is @p  10000 )
 *  <li> @p MinY      Minimal value of @p Y for 2D-projection profiles.
 *                    It is used only for logical assemblies
 *                                             (default value is @p -10000 )
 *  <li> @p MaxY      Maximal value of @p Y for 2D-projection profiles.
 *                    It is used only for logical assemblies
 *                                             (default value is @p  10000 )
 *  <li> @p MinZ      Minimal value of @p Z for 2D-projection profiles.
 *                    It is used only for logical assemblies
 *                                             (default value is @p -10000 )
 *  <li> @p MaxZ      Maximal value of @p Z for 2D-projection profiles.
 *                    It is used only for logical assemblies
 *                                             (default value is @p  10000 )
 *  <li> @p RandomNumberService The name of the Gaudi Random Number Service
 *                                       (default value is @p "RndmGenSvc" )
 *  </ul>
 *
 *  @see ILVolume
 *  @see  LVolume
 *  @see  LAssembly
 *  @see  Material
 *  @see ISolid
 *  @see  SolidBox
 *
 *  @author Vanya Belyaev Ivan.Belyaev@itep.ru
 *  @date   2002-05-25
 */

