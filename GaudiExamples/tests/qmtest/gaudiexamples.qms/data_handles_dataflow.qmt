<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<extension class="GaudiTest.GaudiExeTest" kind="test">
<argument name="program"><text>gaudirun.py</text></argument>
<argument name="options"><text>
from Gaudi.Configuration import *
from Configurables import (HiveWhiteBoard, HiveSlimEventLoopMgr,
                           AvalancheSchedulerSvc, AlgResourcePool,
                           DataHandleFlowAlgA, DataHandleFlowAlgB,
                           DataHandleFlowAlgC, DataHandleFlowAlgD,
                           DataHandleFlowAlgE, DataHandleFlowAlgF,
                           DataHandleFlowAlgG, DataHandleFlowAlgH)

# Example configuration. We only need to check that data dependencies are fed
# to the Scheduler, so threaded execution is unnecessary unpredictability.
evtMax = 2
evtslots = 1
threads = 1

# Boring GaudiHive setup
whiteboard = HiveWhiteBoard("EventDataSvc", EventSlots=evtslots)
slimeventloopmgr = HiveSlimEventLoopMgr(SchedulerName="AvalancheSchedulerSvc",
                                        OutputLevel=DEBUG)
scheduler = AvalancheSchedulerSvc(ThreadPoolSize=threads,
                                  OutputLevel=WARNING)
AlgResourcePool(OutputLevel=DEBUG)

# A nontrivial Algorithm data flow graph. Notice that this is _not_ a correct
# execution order: the Scheduler should figure out a correct order using the
# data dependency information that the DataHandles provide.
algs = [DataHandleFlowAlgA(), DataHandleFlowAlgB(), DataHandleFlowAlgC(),
        DataHandleFlowAlgD(), DataHandleFlowAlgE(), DataHandleFlowAlgF(),
        DataHandleFlowAlgG(), DataHandleFlowAlgH()]

# Application manager setup
ApplicationMgr(EvtMax=evtMax,
               EvtSel='NONE',
               ExtSvc=[whiteboard],
               EventLoop=slimeventloopmgr,
               TopAlg=algs,
               MessageSvcType="InertMessageSvc")
</text></argument>
    <argument name="reference"><text>refs/data_handles_dataflow.ref</text></argument>
    <argument name="exit_code"><integer>0</integer></argument>
</extension>
