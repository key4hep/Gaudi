<?xml version="1.0" ?>
<!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<extension class="GaudiTest.GaudiExeTest" kind="test">
<argument name="program"><text>gaudirun.py</text></argument>
<argument name="args"><set>
<text>-v</text>
<text>--dry-run</text>
</set></argument>
<argument name="options"><text>
from Gaudi.Configuration import *
from Configurables import Gaudi__Examples__HistoProps
h = Gaudi__Examples__HistoProps()
h.Histo1 = ('MyHistogram',-1,1,100)
h.Histo1 = ('MyHistogram',-5,5,500)
</text></argument>
<argument name="validator"><text>
# this is a hack to work around an issue with DataInputs and DataOutputs printout
def DataObjectDescriptorCollection():
    return "DataObjectDescriptorCollection()"

conf_dict = eval('\n'.join(stdout.splitlines()))
expected = {'Gaudi::Examples::HistoProps':
                {'Histo1': ('MyHistogram', -5, 5, 500),
                 'DataInputs': DataObjectDescriptorCollection(),
                 'DataOutputs': DataObjectDescriptorCollection()}}

if conf_dict != expected:
    causes.append("configuration result")
    from pprint import PrettyPrinter
    pp = PrettyPrinter()
    result["GaudiTest.configuration.expected"] = result.Quote(pp.pformat(expected))
    result["GaudiTest.configuration.found"] = result.Quote(pp.pformat(conf_dict))
</text></argument>
</extension>
