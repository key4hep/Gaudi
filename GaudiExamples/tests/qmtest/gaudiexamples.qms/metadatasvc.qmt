<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<extension class="GaudiTest.GaudiExeTest" kind="test">
<argument name="program"><text>gaudirun.py</text></argument>
<argument name="args"><set>
  <text>$GAUDIEXAMPLESROOT/options/TupleEx.py</text>
  <text>--option</text>
  <text>ApplicationMgr(EvtMax=10).ExtSvc.append('Gaudi::MetaDataSvc')</text>
  <text>--option</text>
  <text>from Configurables import Gaudi__MetaDataSvc; Gaudi__MetaDataSvc(OutputLevel=DEBUG)</text>
</set></argument>
<argument name="use_temp_dir"><enumeral>true</enumeral></argument>
<argument name="reference"><text>refs/MetaDataSvc.ref</text></argument>
<argument name="validator"><text>
preprocessor = (normalizeExamples +
     RegexpReplacer(r'JobOptionsSvc\.SEARCHPATH:.*', r'JobOptionsSvc\.SEARCHPATH:...'))
validateWithReference(preproc=preprocessor)

from itertools import takewhile, islice, dropwhile
stdout = filter(lambda x: x.strip(),
                takewhile(lambda x: x.strip(),
                          islice(dropwhile(lambda l: 'Metadata collected:' not in l,
                                 stdout.splitlines()), 1, None)))
stdout = sorted(stdout)
from subprocess import check_output, CalledProcessError
try:
    info = eval(check_output(['dumpMetaData', 'TupleEx.root']))
    info = [':'.join(item) for item in info.items()]
    info.sort()
    if stdout != info:
    	causes.append('metadata content')
except CalledProcessError:
    causes.append('dump metadata script failure')
</text></argument>
</extension>
