<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<!--
    (c) Copyright 1998-2019 CERN for the benefit of the LHCb and ATLAS collaborations

    This software is distributed under the terms of the Apache version 2 licence,
    copied verbatim in the file "LICENSE".

    In applying this licence, CERN does not waive the privileges and immunities
    granted to it by virtue of its status as an Intergovernmental Organization
    or submit itself to any jurisdiction.
-->
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>gaudirun.py</text></argument>
  <argument name="args"><set><text>-v</text></set></argument>
  <argument name="options"><text>
from Gaudi.Configuration import *

from Configurables import AuditorTestAlg, GaudiExamples__LoggingAuditor as LoggingAuditor

importOptions("Common.opts")

AuditorSvc().Auditors += [ TimingAuditor("TIMER"),
                           LoggingAuditor("LoggingAuditor") ]

app = ApplicationMgr(TopAlg = [AuditorTestAlg()],
                     EvtSel = "NONE", EvtMax = 5)

app.ExtSvc += [ ToolSvc(), AuditorSvc() ]
app.AuditAlgorithms = True

MessageSvc().setDebug.append("EventLoopMgr") 

</text></argument>
<argument name="validator"><text>
import re
if not re.search("TIMER.TIMER *INFO AuditorTestAlg:loop",stdout):
    causes.append("missing timing reoprt")
    result["GaudiTest.expected"] = result.Quote("timing report for timer 'AuditorTestAlg:loop'")
</text></argument>
</extension>
