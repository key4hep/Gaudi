<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<!--
    (c) Copyright 1998-2019 CERN for the benefit of the LHCb and ATLAS collaborations

    This software is distributed under the terms of the Apache version 2 licence,
    copied verbatim in the file "LICENSE".

    In applying this licence, CERN does not waive the privileges and immunities
    granted to it by virtue of its status as an Intergovernmental Organization
    or submit itself to any jurisdiction.
-->
<extension class="GaudiTest.GaudiExeTest" kind="test">
<argument name="program"><text>gaudirun.py</text></argument>
<argument name="options"><text>
# Skip test when running inside GitLab-CI (no ptrace capabilities)
import os
import sys
if 'CI' in os.environ:
    sys.exit(77)

from Gaudi.Configuration import *

from Configurables import GaudiTesting__SleepyAlg as SleepyAlg
from Configurables import StalledEventMonitor

importOptions("Common.opts")

alg = SleepyAlg("Sleepy", SleepTime = 30)
sem = StalledEventMonitor(EventTimeout = 5,
                          MaxTimeoutCount = 1,
                          StackTrace = True)

app = ApplicationMgr(TopAlg = [alg],
                     EvtSel = "NONE", EvtMax = 2,
                     StalledEventMonitoring = True)

</text></argument>
<argument name="environment"><set>
<text>JOBOPTSEARCHPATH=$ENV_PROJECT_SOURCE_DIR/GaudiExamples/options:$ENV_PROJECT_SOURCE_DIR/Gaudi/GaudiExamples/options</text>
</set></argument>
<argument name="signal"><integer>3</integer></argument>
<argument name="validator"><text>
import re
import platform

stdout = re.subn(r"size = [0-9]+(\.[0-9]*)? MB", "size = # MB", stdout)[0]

findReferenceBlock("EventWatchdog       FATAL too much time on a single event: aborting process")

findReferenceBlock("=== Stalled event: current stack trace ===", stdout=stderr, id='stderr')

if platform.processor() != "aarch64" and 'in GaudiTesting::SleepyAlg::execute' not in stderr:
    causes.append('invalid stack trace')

</text></argument>
<argument name="unsupported_platforms"><set>
  <text>asan</text>
  <text>lsan</text>
  <text>ubsan</text>
  <text>tsan</text>
</set></argument>
</extension>
