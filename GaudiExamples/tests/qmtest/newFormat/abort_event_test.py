# -*- coding: utf-8 -*-
import BaseTest
from BaseTest import *

class Test(BaseTest):

    def __init__(self):
        BaseTest.__init__(self)
        self.name = os.path.basename(__file__)[:-3]
        self.program = "gaudirun.py"
        self.options="""from Gaudi.Configuration import *
from Configurables import HelloWorld, AbortEventAlg

importOptions("Common.opts")

h1 = HelloWorld("HelloWorld1")
h2 = HelloWorld("HelloWorld2")

alg = AbortEventAlg(AbortedEventNumber = 3)

app = ApplicationMgr(TopAlg = [h1,alg,h2],
                     EvtSel = "NONE", EvtMax = 5)

MessageSvc().setDebug.append("EventLoopMgr") """

    def validator(self,stdout,stderr, result, causes, reference, error_reference):
        self.findReferenceBlock("""
HelloWorld1          INFO beginning new run....
HelloWorld2          INFO beginning new run....
HelloWorld1          INFO executing....
HelloWorld2          INFO executing....
HelloWorld1          INFO executing....
HelloWorld2          INFO executing....
HelloWorld1          INFO executing....
EventLoopMgr        DEBUG AbortEvent incident fired by AbortEventAlg
HelloWorld1          INFO executing....
HelloWorld2          INFO executing....
HelloWorld1          INFO executing....
HelloWorld2          INFO executing....
HelloWorld1          INFO ending new run....
HelloWorld2          INFO ending new run....
""", signature_offset = 7)
