package GaudiExamples
version v26r1p1

use ROOT         * LCG_Interfaces
use RELAX        * LCG_Interfaces -no_auto_imports
use AIDA         * LCG_Interfaces

use Gaudi        *

apply_pattern use_unless pkg=GaudiPartProp tag=ATLAS ver="*" opt="-no_auto_imports"

use PartPropSvc  * -no_auto_imports
use GaudiPython  * -no_auto_imports
use GaudiGSL     *
use RootHistCnv  * -no_auto_imports

apply_pattern use_unless pkg=RootCnv tag=ATLAS ver="*" opt="-no_auto_imports"

use Boost * LCG_Interfaces
use HepPDT * LCG_Interfaces

apply_pattern install_more_includes more=GaudiExamples
library GaudiExamplesLib -no_static Lib/*.cpp

macro GaudiExamples_src  "AbortEvent/*.cpp \
                          AlgSequencer/*.cpp \
                          AlgTools/*.cpp \
                          DataOnDemand/*.cpp \
                          AlgErrAud/*.cpp \
                          GSLTools/*.cpp \
                          RandomNumber/*.cpp \
                          Histograms/*.cpp \
                          NTuples/*.cpp \
                          TupleEx/*.cpp \
                          CounterEx/*.cpp \
                          PartProp/*.cpp \
                          Properties/*.cpp \
                          ExtendedProperties/*.cpp \
                          IO/*.cpp \
                          ColorMsg/ColorMsgAlg.cpp \
                          History/History.cpp \
                          THist/*.cpp \
                          ErrorLog/ErrorLogTest.cpp \
                          EvtColsEx/EvtColAlg.cpp \
                          Maps/*.cpp \
                          MultipleLogStreams/*.cpp \
                          GaudiCommonTests/*.cpp \
                          IncidentSvc/*.cpp \
                          bug_34121/*.cpp \
                          Auditors/*.cpp \
                          Timing/*.cpp \
                          Selections/*.cpp \
                          SvcInitLoop/*.cpp \
                          StringKeys/*.cpp \
                          StatusCodeSvc/*.cpp \
                          FileMgr/*.cpp \
                          testing/*.cpp \
                          IntelProfiler/*.cpp \
                          PluginService/*.cpp "

macro_append GaudiExamples_src " MultiInput/*.cpp " \
             ATLAS ""

library GaudiExamples    -no_static ${GaudiExamples_src}


apply_pattern reflex_dictionary dictionary=GaudiExamples \
				headerfiles=$(GAUDIEXAMPLESROOT)/src/IO/dict.h \
				selectionfile=$(GAUDIEXAMPLESROOT)/src/IO/dict.xml \
				options=" $(includes) "
macro GaudiExamplesDict_use_linkopts $(use_linkopts)

apply_pattern install_python_modules

#==> Gaudi with multiple threads
# commented out since it shall not link GaudiSvc
# application GaudiMT       GaudiMT/GaudiMTMain.cpp \
#                          GaudiMT/MTEventLoopMgr.cpp \
#                          GaudiMT/MTMessageSvc.cpp \
#                          GaudiMT/MTHelloWorld.cpp \
#                          GaudiMT/GaudiMTExample_load.cpp \
#                          GaudiMT/GaudiMTExample_entry.cpp
#macro GaudiMT_cppflags " -I$(GAUDISVCROOT) "      # needs to have access to "internal" header files
#macro_append GaudiMTlinkopts " -L$(GAUDISVCROOT)/$(tag) -lGaudiSvc -lpthread "
#macro_remove constituents "" target-winxp "GaudiMT"      # not working on Windows

application Allocator         Allocator/*.cpp
macro_append Allocator_dependencies GaudiExamples
#-------Options------------------------------------------------------------------
apply_pattern  application_path
set STDOPTS           ${GAUDIEXAMPLESROOT}/options
path_append JOBOPTSEARCHPATH  "/NONEXISTINGDIR"
path_append JOBOPTSEARCHPATH  ${GAUDIEXAMPLESROOT}/options

private
#apply_pattern component_library library=GaudiMTExample

apply_pattern linker_library    library=GaudiExamplesLib
apply_pattern component_library library=GaudiExamples

macro_append ROOT_linkopts " -lHist " \
              target-winxp " libHist.lib " \
              target-mac104 " -lHist -lMatrix "
macro_append ROOT_linkopts        "" \
       ROOT_GE_5_15&target-mac104 " -lNet "

#------------------------------------------------------------------------------
# Create a python binary module
# -----------------------------
use Python * LCG_Interfaces -no_auto_imports
apply_pattern pyd_boost_module module=PyExample files=PythonModule/*.cpp
# we do not need/want to link the module against the package library
macro_remove PyExample_use_linkopts '$(GaudiExamples_linkopts)'
# otherwise we should have used
# apply_pattern pyd_boost_module module=PyExample files=PythonModule/*.cpp deps=GaudiExamplesLib
#------------------------------------------------------------------------------

apply_pattern QMTest
path_prepend PYTHONPATH "" \
                 QMTest "${GAUDIEXAMPLESROOT}/tests/qmtest"
