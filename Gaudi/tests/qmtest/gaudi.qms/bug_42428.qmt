<?xml version="1.0" ?>
<!--
    (c) Copyright 1998-2019 CERN for the benefit of the LHCb and ATLAS collaborations

    This software is distributed under the terms of the Apache version 2 licence,
    copied verbatim in the file "LICENSE".

    In applying this licence, CERN does not waive the privileges and immunities
    granted to it by virtue of its status as an Intergovernmental Organization
    or submit itself to any jurisdiction.
-->
<!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<extension class="GaudiTest.GaudiExeTest" kind="test">
<argument name="program"><text>gaudirun.py</text></argument>
<argument name="args"><set><text>-v</text><text>-n</text></set></argument>
<argument name="options"><text>
from Gaudi.Configuration import *

class TestAlg(ConfigurableUser):
    __slots__ = { "Dict": { "a": 1 },
                  "List": [ "a", "b" ] }
    def getGaudiType(self):
        return "Test" # To avoid skipping of ConfigurableUser

alg1 = TestAlg("Test1",
               Dict = { "b": 10 },
               List = [ "A", "B" ])

alg2 = alg1.clone("Test2")
alg2.Dict["a"] = 20
alg2.List.append("C")

</text></argument>
<argument name="validator"><text>
conf_dict = eval('\n'.join(stdout.splitlines()))
expected = { 'Test1': { 'Dict': { "b": 10 },
                        'List': [ "A", "B" ] },
             'Test2': { 'Dict': { "a": 20 , "b": 10 },
                        'List': [ "A", "B", "C" ] } }

if conf_dict != expected:
    causes.append("configuration result")
    from pprint import PrettyPrinter
    pp = PrettyPrinter()
    result["GaudiTest.configuration.expected"] = result.Quote(pp.pformat(expected))
    result["GaudiTest.configuration.found"] = result.Quote(pp.pformat(conf_dict))
</text></argument>
</extension>
