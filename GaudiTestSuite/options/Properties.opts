//##############################################################
// Job options file
//==============================================================
#include "Common.opts"
#units   "units.opts"

// test the job opts search path mechanism
// The environment variable JOBOPTSEARCHPATH controls it
#include "optsub1/dummy1.opts"

//--------------------------------------------------------------
// Private Application Configuration options
//--------------------------------------------------------------
ApplicationMgr.TopAlg  = {   "PropertyAlg" };
// test for the multiple inclusion of the same alg
ApplicationMgr.TopAlg  += {   "PropertyAlg", "PropertyProxy" };
// test for the removal of an algorithm
ApplicationMgr.TopAlg  -=  {  "PropertyAlg" };

// Set output level threshold (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL )
MessageSvc.OutputLevel  = 3;

//--------------------------------------------------------------
// Event related parameters
//--------------------------------------------------------------
ApplicationMgr.EvtMax   = 1;   // events to be processed (default is 10)
ApplicationMgr.EvtSel   = "NONE"; // do not use any event input
ApplicationMgr.HistogramPersistency = "NONE";

//--------------------------------------------------------------
// Algorithms Private Options
//--------------------------------------------------------------
PropertyAlg.OutputLevel = 3;

PropertyAlg.Int    = 101 ;
PropertyAlg.Int64  = 4294967296; // 1 << 32
PropertyAlg.UInt64 = 4294967296; // 1 << 32
PropertyAlg.Double = 101.1e+10;
PropertyAlg.String = "hundred \"one\"";
PropertyAlg.Bool   = false;


PropertyAlg.IntArray    = { 1, 2, 3, 5};
PropertyAlg.Int64Array  = {4294967296}; // 1 << 32
PropertyAlg.UInt64Array = {4294967296}; // 1 << 32
PropertyAlg.DoubleArray = { -11.0 , 2., 3.3, 0.4e-03 };
PropertyAlg.StringArray = {"one", "two", "four" };
PropertyAlg.BoolArray   = {false, true, false };
PropertyAlg.EmptyArray  = { };
PropertyAlg.StringMap  = { "one" : "une" };


// Units testing
PropertyAlg.DoubleArrayWithUnits    = { 1.1 * m2 , -2.*cm, 3.3*cm, 0.4e-03 * m };
PropertyAlg.DoubleArrayWithoutUnits = { 1100000.0 , -20., 33.0, 0.4 };

PropertyAlg.PInt    = 101 ;
PropertyAlg.PDouble = 101.E5;
PropertyAlg.PString = "hundred 'one'";
PropertyAlg.PBool   = true;


PropertyAlg.PIntArray    = { 1, 2, 3, 5};
PropertyAlg.PDoubleArray = {1.1 , 2., 3.3 };
PropertyAlg.PStringArray = {"one", "two", "four" };
PropertyAlg.PBoolArray   = { true, false, true, false };


PropertyAlg.IntPairArray = [ (1,2), (3,4), (5,6) ];
PropertyAlg.DoublePairArray = [ (1.1,2.1), (2.3,4.5), (5.6, 6.7) ];


PropertyProxy.String = "This is set by the proxy";

// MessageSvc Properties testing
MessageSvc.setDebug += {"EventLoopMgr"};
MessageSvc.setVerbose  += {"MsgTest"};
//MessageSvc.setDebug  += {"MsgTest"};
//MessageSvc.setInfo  += {"MsgTest"};
//MessageSvc.setError  += {"MsgTest"};
MessageSvc.setWarning  += {"MsgTest"};
//MessageSvc.setFatal  += {"MsgTest"};
//MessageSvc.setAlways  += {"MsgTest"};
